{"ast":null,"code":"import { DateWithZone } from './datewithzone';\nimport { iter } from './iter/index';\nimport dateutil from './dateutil';\nexport function iterSet(iterResult, _rrule, _exrule, _rdate, _exdate, tzid) {\n  var _exdateHash = {};\n  var _accept = iterResult.accept;\n\n  function evalExdate(after, before) {\n    _exrule.forEach(function (rrule) {\n      rrule.between(after, before, true).forEach(function (date) {\n        _exdateHash[Number(date)] = true;\n      });\n    });\n  }\n\n  _exdate.forEach(function (date) {\n    var zonedDate = new DateWithZone(date, tzid).rezonedDate();\n    _exdateHash[Number(zonedDate)] = true;\n  });\n\n  iterResult.accept = function (date) {\n    var dt = Number(date);\n    if (isNaN(dt)) return _accept.call(this, date);\n\n    if (!_exdateHash[dt]) {\n      evalExdate(new Date(dt - 1), new Date(dt + 1));\n\n      if (!_exdateHash[dt]) {\n        _exdateHash[dt] = true;\n        return _accept.call(this, date);\n      }\n    }\n\n    return true;\n  };\n\n  if (iterResult.method === 'between') {\n    evalExdate(iterResult.args.after, iterResult.args.before);\n\n    iterResult.accept = function (date) {\n      var dt = Number(date);\n\n      if (!_exdateHash[dt]) {\n        _exdateHash[dt] = true;\n        return _accept.call(this, date);\n      }\n\n      return true;\n    };\n  }\n\n  for (var i = 0; i < _rdate.length; i++) {\n    var zonedDate = new DateWithZone(_rdate[i], tzid).rezonedDate();\n    if (!iterResult.accept(new Date(zonedDate.getTime()))) break;\n  }\n\n  _rrule.forEach(function (rrule) {\n    iter(iterResult, rrule.options);\n  });\n\n  var res = iterResult._result;\n  dateutil.sort(res);\n\n  switch (iterResult.method) {\n    case 'all':\n    case 'between':\n      return res;\n\n    case 'before':\n      return res.length && res[res.length - 1] || null;\n\n    case 'after':\n    default:\n      return res.length && res[0] || null;\n  }\n}","map":{"version":3,"sources":["../../../src/iterset.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { DateWithZone } from './datewithzone';\nimport { iter } from './iter/index';\nimport dateutil from './dateutil';\nexport function iterSet(iterResult, _rrule, _exrule, _rdate, _exdate, tzid) {\n    var _exdateHash = {};\n    var _accept = iterResult.accept;\n    function evalExdate(after, before) {\n        _exrule.forEach(function (rrule) {\n            rrule.between(after, before, true).forEach(function (date) {\n                _exdateHash[Number(date)] = true;\n            });\n        });\n    }\n    _exdate.forEach(function (date) {\n        var zonedDate = new DateWithZone(date, tzid).rezonedDate();\n        _exdateHash[Number(zonedDate)] = true;\n    });\n    iterResult.accept = function (date) {\n        var dt = Number(date);\n        if (isNaN(dt))\n            return _accept.call(this, date);\n        if (!_exdateHash[dt]) {\n            evalExdate(new Date(dt - 1), new Date(dt + 1));\n            if (!_exdateHash[dt]) {\n                _exdateHash[dt] = true;\n                return _accept.call(this, date);\n            }\n        }\n        return true;\n    };\n    if (iterResult.method === 'between') {\n        evalExdate(iterResult.args.after, iterResult.args.before);\n        iterResult.accept = function (date) {\n            var dt = Number(date);\n            if (!_exdateHash[dt]) {\n                _exdateHash[dt] = true;\n                return _accept.call(this, date);\n            }\n            return true;\n        };\n    }\n    for (var i = 0; i < _rdate.length; i++) {\n        var zonedDate = new DateWithZone(_rdate[i], tzid).rezonedDate();\n        if (!iterResult.accept(new Date(zonedDate.getTime())))\n            break;\n    }\n    _rrule.forEach(function (rrule) {\n        iter(iterResult, rrule.options);\n    });\n    var res = iterResult._result;\n    dateutil.sort(res);\n    switch (iterResult.method) {\n        case 'all':\n        case 'between':\n            return res;\n        case 'before':\n            return ((res.length && res[res.length - 1]) || null);\n        case 'after':\n        default:\n            return ((res.length && res[0]) || null);\n    }\n}\n//# sourceMappingURL=iterset.js.map"]},"metadata":{},"sourceType":"module"}