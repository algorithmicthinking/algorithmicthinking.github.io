{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { freqIsDailyOrGreater } from './types';\nimport { includes, notEmpty, isPresent, isNumber, isArray, isWeekdayStr } from './helpers';\nimport RRule, { defaultKeys, DEFAULT_OPTIONS } from './rrule';\nimport dateutil from './dateutil';\nimport { Weekday } from './weekday';\nimport { Time } from './datetime';\nexport function initializeOptions(options) {\n  var invalid = [];\n  var keys = Object.keys(options); // Shallow copy for options and origOptions and check for invalid\n\n  for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n    var key = keys_1[_i];\n    if (!includes(defaultKeys, key)) invalid.push(key);\n    if (dateutil.isDate(options[key]) && !dateutil.isValidDate(options[key])) invalid.push(key);\n  }\n\n  if (invalid.length) {\n    throw new Error('Invalid options: ' + invalid.join(', '));\n  }\n\n  return __assign({}, options);\n}\nexport function parseOptions(options) {\n  var opts = __assign(__assign({}, DEFAULT_OPTIONS), initializeOptions(options));\n\n  if (isPresent(opts.byeaster)) opts.freq = RRule.YEARLY;\n\n  if (!(isPresent(opts.freq) && RRule.FREQUENCIES[opts.freq])) {\n    throw new Error(\"Invalid frequency: \" + opts.freq + \" \" + options.freq);\n  }\n\n  if (!opts.dtstart) opts.dtstart = new Date(new Date().setMilliseconds(0));\n\n  if (!isPresent(opts.wkst)) {\n    opts.wkst = RRule.MO.weekday;\n  } else if (isNumber(opts.wkst)) {// cool, just keep it like that\n  } else {\n    opts.wkst = opts.wkst.weekday;\n  }\n\n  if (isPresent(opts.bysetpos)) {\n    if (isNumber(opts.bysetpos)) opts.bysetpos = [opts.bysetpos];\n\n    for (var i = 0; i < opts.bysetpos.length; i++) {\n      var v = opts.bysetpos[i];\n\n      if (v === 0 || !(v >= -366 && v <= 366)) {\n        throw new Error('bysetpos must be between 1 and 366,' + ' or between -366 and -1');\n      }\n    }\n  }\n\n  if (!(Boolean(opts.byweekno) || notEmpty(opts.byweekno) || notEmpty(opts.byyearday) || Boolean(opts.bymonthday) || notEmpty(opts.bymonthday) || isPresent(opts.byweekday) || isPresent(opts.byeaster))) {\n    switch (opts.freq) {\n      case RRule.YEARLY:\n        if (!opts.bymonth) opts.bymonth = opts.dtstart.getUTCMonth() + 1;\n        opts.bymonthday = opts.dtstart.getUTCDate();\n        break;\n\n      case RRule.MONTHLY:\n        opts.bymonthday = opts.dtstart.getUTCDate();\n        break;\n\n      case RRule.WEEKLY:\n        opts.byweekday = [dateutil.getWeekday(opts.dtstart)];\n        break;\n    }\n  } // bymonth\n\n\n  if (isPresent(opts.bymonth) && !isArray(opts.bymonth)) {\n    opts.bymonth = [opts.bymonth];\n  } // byyearday\n\n\n  if (isPresent(opts.byyearday) && !isArray(opts.byyearday) && isNumber(opts.byyearday)) {\n    opts.byyearday = [opts.byyearday];\n  } // bymonthday\n\n\n  if (!isPresent(opts.bymonthday)) {\n    opts.bymonthday = [];\n    opts.bynmonthday = [];\n  } else if (isArray(opts.bymonthday)) {\n    var bymonthday = [];\n    var bynmonthday = [];\n\n    for (var i = 0; i < opts.bymonthday.length; i++) {\n      var v = opts.bymonthday[i];\n\n      if (v > 0) {\n        bymonthday.push(v);\n      } else if (v < 0) {\n        bynmonthday.push(v);\n      }\n    }\n\n    opts.bymonthday = bymonthday;\n    opts.bynmonthday = bynmonthday;\n  } else if (opts.bymonthday < 0) {\n    opts.bynmonthday = [opts.bymonthday];\n    opts.bymonthday = [];\n  } else {\n    opts.bynmonthday = [];\n    opts.bymonthday = [opts.bymonthday];\n  } // byweekno\n\n\n  if (isPresent(opts.byweekno) && !isArray(opts.byweekno)) {\n    opts.byweekno = [opts.byweekno];\n  } // byweekday / bynweekday\n\n\n  if (!isPresent(opts.byweekday)) {\n    opts.bynweekday = null;\n  } else if (isNumber(opts.byweekday)) {\n    opts.byweekday = [opts.byweekday];\n    opts.bynweekday = null;\n  } else if (isWeekdayStr(opts.byweekday)) {\n    opts.byweekday = [Weekday.fromStr(opts.byweekday).weekday];\n    opts.bynweekday = null;\n  } else if (opts.byweekday instanceof Weekday) {\n    if (!opts.byweekday.n || opts.freq > RRule.MONTHLY) {\n      opts.byweekday = [opts.byweekday.weekday];\n      opts.bynweekday = null;\n    } else {\n      opts.bynweekday = [[opts.byweekday.weekday, opts.byweekday.n]];\n      opts.byweekday = null;\n    }\n  } else {\n    var byweekday = [];\n    var bynweekday = [];\n\n    for (var i = 0; i < opts.byweekday.length; i++) {\n      var wday = opts.byweekday[i];\n\n      if (isNumber(wday)) {\n        byweekday.push(wday);\n        continue;\n      } else if (isWeekdayStr(wday)) {\n        byweekday.push(Weekday.fromStr(wday).weekday);\n        continue;\n      }\n\n      if (!wday.n || opts.freq > RRule.MONTHLY) {\n        byweekday.push(wday.weekday);\n      } else {\n        bynweekday.push([wday.weekday, wday.n]);\n      }\n    }\n\n    opts.byweekday = notEmpty(byweekday) ? byweekday : null;\n    opts.bynweekday = notEmpty(bynweekday) ? bynweekday : null;\n  } // byhour\n\n\n  if (!isPresent(opts.byhour)) {\n    opts.byhour = opts.freq < RRule.HOURLY ? [opts.dtstart.getUTCHours()] : null;\n  } else if (isNumber(opts.byhour)) {\n    opts.byhour = [opts.byhour];\n  } // byminute\n\n\n  if (!isPresent(opts.byminute)) {\n    opts.byminute = opts.freq < RRule.MINUTELY ? [opts.dtstart.getUTCMinutes()] : null;\n  } else if (isNumber(opts.byminute)) {\n    opts.byminute = [opts.byminute];\n  } // bysecond\n\n\n  if (!isPresent(opts.bysecond)) {\n    opts.bysecond = opts.freq < RRule.SECONDLY ? [opts.dtstart.getUTCSeconds()] : null;\n  } else if (isNumber(opts.bysecond)) {\n    opts.bysecond = [opts.bysecond];\n  }\n\n  return {\n    parsedOptions: opts\n  };\n}\nexport function buildTimeset(opts) {\n  var millisecondModulo = opts.dtstart.getTime() % 1000;\n\n  if (!freqIsDailyOrGreater(opts.freq)) {\n    return [];\n  }\n\n  var timeset = [];\n  opts.byhour.forEach(function (hour) {\n    opts.byminute.forEach(function (minute) {\n      opts.bysecond.forEach(function (second) {\n        timeset.push(new Time(hour, minute, second, millisecondModulo));\n      });\n    });\n  });\n  return timeset;\n}","map":{"version":3,"sources":["../../../src/parseoptions.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport { freqIsDailyOrGreater } from './types';\nimport { includes, notEmpty, isPresent, isNumber, isArray, isWeekdayStr } from './helpers';\nimport RRule, { defaultKeys, DEFAULT_OPTIONS } from './rrule';\nimport dateutil from './dateutil';\nimport { Weekday } from './weekday';\nimport { Time } from './datetime';\nexport function initializeOptions(options) {\n    var invalid = [];\n    var keys = Object.keys(options);\n    // Shallow copy for options and origOptions and check for invalid\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        if (!includes(defaultKeys, key))\n            invalid.push(key);\n        if (dateutil.isDate(options[key]) && !dateutil.isValidDate(options[key]))\n            invalid.push(key);\n    }\n    if (invalid.length) {\n        throw new Error('Invalid options: ' + invalid.join(', '));\n    }\n    return __assign({}, options);\n}\nexport function parseOptions(options) {\n    var opts = __assign(__assign({}, DEFAULT_OPTIONS), initializeOptions(options));\n    if (isPresent(opts.byeaster))\n        opts.freq = RRule.YEARLY;\n    if (!(isPresent(opts.freq) && RRule.FREQUENCIES[opts.freq])) {\n        throw new Error(\"Invalid frequency: \" + opts.freq + \" \" + options.freq);\n    }\n    if (!opts.dtstart)\n        opts.dtstart = new Date(new Date().setMilliseconds(0));\n    if (!isPresent(opts.wkst)) {\n        opts.wkst = RRule.MO.weekday;\n    }\n    else if (isNumber(opts.wkst)) {\n        // cool, just keep it like that\n    }\n    else {\n        opts.wkst = opts.wkst.weekday;\n    }\n    if (isPresent(opts.bysetpos)) {\n        if (isNumber(opts.bysetpos))\n            opts.bysetpos = [opts.bysetpos];\n        for (var i = 0; i < opts.bysetpos.length; i++) {\n            var v = opts.bysetpos[i];\n            if (v === 0 || !(v >= -366 && v <= 366)) {\n                throw new Error('bysetpos must be between 1 and 366,' + ' or between -366 and -1');\n            }\n        }\n    }\n    if (!(Boolean(opts.byweekno) ||\n        notEmpty(opts.byweekno) ||\n        notEmpty(opts.byyearday) ||\n        Boolean(opts.bymonthday) ||\n        notEmpty(opts.bymonthday) ||\n        isPresent(opts.byweekday) ||\n        isPresent(opts.byeaster))) {\n        switch (opts.freq) {\n            case RRule.YEARLY:\n                if (!opts.bymonth)\n                    opts.bymonth = opts.dtstart.getUTCMonth() + 1;\n                opts.bymonthday = opts.dtstart.getUTCDate();\n                break;\n            case RRule.MONTHLY:\n                opts.bymonthday = opts.dtstart.getUTCDate();\n                break;\n            case RRule.WEEKLY:\n                opts.byweekday = [dateutil.getWeekday(opts.dtstart)];\n                break;\n        }\n    }\n    // bymonth\n    if (isPresent(opts.bymonth) && !isArray(opts.bymonth)) {\n        opts.bymonth = [opts.bymonth];\n    }\n    // byyearday\n    if (isPresent(opts.byyearday) &&\n        !isArray(opts.byyearday) &&\n        isNumber(opts.byyearday)) {\n        opts.byyearday = [opts.byyearday];\n    }\n    // bymonthday\n    if (!isPresent(opts.bymonthday)) {\n        opts.bymonthday = [];\n        opts.bynmonthday = [];\n    }\n    else if (isArray(opts.bymonthday)) {\n        var bymonthday = [];\n        var bynmonthday = [];\n        for (var i = 0; i < opts.bymonthday.length; i++) {\n            var v = opts.bymonthday[i];\n            if (v > 0) {\n                bymonthday.push(v);\n            }\n            else if (v < 0) {\n                bynmonthday.push(v);\n            }\n        }\n        opts.bymonthday = bymonthday;\n        opts.bynmonthday = bynmonthday;\n    }\n    else if (opts.bymonthday < 0) {\n        opts.bynmonthday = [opts.bymonthday];\n        opts.bymonthday = [];\n    }\n    else {\n        opts.bynmonthday = [];\n        opts.bymonthday = [opts.bymonthday];\n    }\n    // byweekno\n    if (isPresent(opts.byweekno) && !isArray(opts.byweekno)) {\n        opts.byweekno = [opts.byweekno];\n    }\n    // byweekday / bynweekday\n    if (!isPresent(opts.byweekday)) {\n        opts.bynweekday = null;\n    }\n    else if (isNumber(opts.byweekday)) {\n        opts.byweekday = [opts.byweekday];\n        opts.bynweekday = null;\n    }\n    else if (isWeekdayStr(opts.byweekday)) {\n        opts.byweekday = [Weekday.fromStr(opts.byweekday).weekday];\n        opts.bynweekday = null;\n    }\n    else if (opts.byweekday instanceof Weekday) {\n        if (!opts.byweekday.n || opts.freq > RRule.MONTHLY) {\n            opts.byweekday = [opts.byweekday.weekday];\n            opts.bynweekday = null;\n        }\n        else {\n            opts.bynweekday = [[opts.byweekday.weekday, opts.byweekday.n]];\n            opts.byweekday = null;\n        }\n    }\n    else {\n        var byweekday = [];\n        var bynweekday = [];\n        for (var i = 0; i < opts.byweekday.length; i++) {\n            var wday = opts.byweekday[i];\n            if (isNumber(wday)) {\n                byweekday.push(wday);\n                continue;\n            }\n            else if (isWeekdayStr(wday)) {\n                byweekday.push(Weekday.fromStr(wday).weekday);\n                continue;\n            }\n            if (!wday.n || opts.freq > RRule.MONTHLY) {\n                byweekday.push(wday.weekday);\n            }\n            else {\n                bynweekday.push([wday.weekday, wday.n]);\n            }\n        }\n        opts.byweekday = notEmpty(byweekday) ? byweekday : null;\n        opts.bynweekday = notEmpty(bynweekday) ? bynweekday : null;\n    }\n    // byhour\n    if (!isPresent(opts.byhour)) {\n        opts.byhour =\n            opts.freq < RRule.HOURLY ? [opts.dtstart.getUTCHours()] : null;\n    }\n    else if (isNumber(opts.byhour)) {\n        opts.byhour = [opts.byhour];\n    }\n    // byminute\n    if (!isPresent(opts.byminute)) {\n        opts.byminute =\n            opts.freq < RRule.MINUTELY ? [opts.dtstart.getUTCMinutes()] : null;\n    }\n    else if (isNumber(opts.byminute)) {\n        opts.byminute = [opts.byminute];\n    }\n    // bysecond\n    if (!isPresent(opts.bysecond)) {\n        opts.bysecond =\n            opts.freq < RRule.SECONDLY ? [opts.dtstart.getUTCSeconds()] : null;\n    }\n    else if (isNumber(opts.bysecond)) {\n        opts.bysecond = [opts.bysecond];\n    }\n    return { parsedOptions: opts };\n}\nexport function buildTimeset(opts) {\n    var millisecondModulo = opts.dtstart.getTime() % 1000;\n    if (!freqIsDailyOrGreater(opts.freq)) {\n        return [];\n    }\n    var timeset = [];\n    opts.byhour.forEach(function (hour) {\n        opts.byminute.forEach(function (minute) {\n            opts.bysecond.forEach(function (second) {\n                timeset.push(new Time(hour, minute, second, millisecondModulo));\n            });\n        });\n    });\n    return timeset;\n}\n//# sourceMappingURL=parseoptions.js.map"]},"metadata":{},"sourceType":"module"}