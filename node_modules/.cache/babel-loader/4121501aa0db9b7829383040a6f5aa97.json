{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nexport const useDarkMode = () => {\n  _s();\n\n  const [theme, setTheme] = useState('light');\n  const [componentMounted, setComponentMounted] = useState(false);\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      window.localStorage.setItem('theme', 'dark');\n      setTheme('dark');\n    } else {\n      window.localStorage.setItem('theme', 'light');\n      setTheme('light');\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n\n    if (localTheme) {\n      setTheme(localTheme);\n    } else {\n      setTheme('light');\n      window.localStorage.setItem('theme', 'light');\n    }\n\n    setComponentMounted(true);\n  }, []);\n  return [theme, toggleTheme, componentMounted];\n};\n\n_s(useDarkMode, \"5Y28hpxLmrdWNPGd/5oHnPNY6R4=\");","map":{"version":3,"sources":["/Users/rsha256/algorithmicthinking.github.io/src/components/UseDarkMode.js"],"names":["useEffect","useState","useDarkMode","theme","setTheme","componentMounted","setComponentMounted","toggleTheme","window","localStorage","setItem","localTheme","getItem"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,OAAD,CAAlC;AACA,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,KAAD,CAAxD;;AACA,QAAMM,WAAW,GAAG,MAAM;AACxB,QAAIJ,KAAK,KAAK,OAAd,EAAuB;AACrBK,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqC,MAArC;AACAN,MAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,KAHD,MAGO;AACLI,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqC,OAArC;AACAN,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF,GARD;;AAUAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,UAAU,GAAGH,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4B,OAA5B,CAAnB;;AACA,QAAID,UAAJ,EAAgB;AACdP,MAAAA,QAAQ,CAACO,UAAD,CAAR;AACD,KAFD,MAEO;AACLP,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACAI,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqC,OAArC;AACD;;AACDJ,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GATQ,EASN,EATM,CAAT;AAWA,SAAO,CAACH,KAAD,EAAQI,WAAR,EAAqBF,gBAArB,CAAP;AACD,CAzBM;;GAAMH,W","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState('light');\n  const [componentMounted, setComponentMounted] = useState(false);\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      window.localStorage.setItem('theme', 'dark');\n      setTheme('dark');\n    } else {\n      window.localStorage.setItem('theme', 'light');\n      setTheme('light');\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    if (localTheme) {\n      setTheme(localTheme);\n    } else {\n      setTheme('light')\n      window.localStorage.setItem('theme', 'light')\n    }\n    setComponentMounted(true);\n  }, []);\n  \n  return [theme, toggleTheme, componentMounted]\n};\n"]},"metadata":{},"sourceType":"module"}