{"ast":null,"code":"import dateutil from '../dateutil';\nimport { pymod, isPresent, includes } from '../helpers';\nexport function buildPoslist(bysetpos, timeset, start, end, ii, dayset) {\n  var poslist = [];\n\n  for (var j = 0; j < bysetpos.length; j++) {\n    var daypos = void 0;\n    var timepos = void 0;\n    var pos = bysetpos[j];\n\n    if (pos < 0) {\n      daypos = Math.floor(pos / timeset.length);\n      timepos = pymod(pos, timeset.length);\n    } else {\n      daypos = Math.floor((pos - 1) / timeset.length);\n      timepos = pymod(pos - 1, timeset.length);\n    }\n\n    var tmp = [];\n\n    for (var k = start; k < end; k++) {\n      var val = dayset[k];\n      if (!isPresent(val)) continue;\n      tmp.push(val);\n    }\n\n    var i = void 0;\n\n    if (daypos < 0) {\n      i = tmp.slice(daypos)[0];\n    } else {\n      i = tmp[daypos];\n    }\n\n    var time = timeset[timepos];\n    var date = dateutil.fromOrdinal(ii.yearordinal + i);\n    var res = dateutil.combine(date, time); // XXX: can this ever be in the array?\n    // - compare the actual date instead?\n\n    if (!includes(poslist, res)) poslist.push(res);\n  }\n\n  dateutil.sort(poslist);\n  return poslist;\n}","map":{"version":3,"sources":["../../../../src/iter/poslist.ts"],"names":[],"mappings":"AAAA,OAAO,QAAP,MAAqB,aAArB;AAEA,SAAS,KAAT,EAAgB,SAAhB,EAA2B,QAA3B,QAA2C,YAA3C;AAGA,OAAM,SAAU,YAAV,CAAwB,QAAxB,EAA4C,OAA5C,EAA6D,KAA7D,EAA4E,GAA5E,EAAyF,EAAzF,EAAuG,MAAvG,EAAgI;AACpI,MAAM,OAAO,GAAW,EAAxB;;AAEA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqC,CAAC,EAAtC,EAA0C;AACxC,QAAI,MAAM,GAAA,KAAA,CAAV;AACA,QAAI,OAAO,GAAA,KAAA,CAAX;AACA,QAAM,GAAG,GAAG,QAAQ,CAAC,CAAD,CAApB;;AAEA,QAAI,GAAG,GAAG,CAAV,EAAa;AACX,MAAA,MAAM,GAAG,IAAI,CAAC,KAAL,CAAW,GAAG,GAAG,OAAO,CAAC,MAAzB,CAAT;AACA,MAAA,OAAO,GAAG,KAAK,CAAC,GAAD,EAAM,OAAO,CAAC,MAAd,CAAf;AACD,KAHD,MAGO;AACL,MAAA,MAAM,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,GAAG,GAAG,CAAP,IAAY,OAAO,CAAC,MAA/B,CAAT;AACA,MAAA,OAAO,GAAG,KAAK,CAAC,GAAG,GAAG,CAAP,EAAU,OAAO,CAAC,MAAlB,CAAf;AACD;;AAED,QAAM,GAAG,GAAG,EAAZ;;AACA,SAAK,IAAI,CAAC,GAAG,KAAb,EAAoB,CAAC,GAAG,GAAxB,EAA6B,CAAC,EAA9B,EAAkC;AAChC,UAAM,GAAG,GAAG,MAAM,CAAC,CAAD,CAAlB;AACA,UAAI,CAAC,SAAS,CAAC,GAAD,CAAd,EAAqB;AACrB,MAAA,GAAG,CAAC,IAAJ,CAAS,GAAT;AACD;;AACD,QAAI,CAAC,GAAA,KAAA,CAAL;;AACA,QAAI,MAAM,GAAG,CAAb,EAAgB;AACd,MAAA,CAAC,GAAG,GAAG,CAAC,KAAJ,CAAU,MAAV,EAAkB,CAAlB,CAAJ;AACD,KAFD,MAEO;AACL,MAAA,CAAC,GAAG,GAAG,CAAC,MAAD,CAAP;AACD;;AAED,QAAM,IAAI,GAAG,OAAO,CAAC,OAAD,CAApB;AACA,QAAM,IAAI,GAAG,QAAQ,CAAC,WAAT,CAAqB,EAAE,CAAC,WAAH,GAAiB,CAAtC,CAAb;AACA,QAAM,GAAG,GAAG,QAAQ,CAAC,OAAT,CAAiB,IAAjB,EAAuB,IAAvB,CAAZ,CA5BwC,CA6BxC;AACA;;AACA,QAAI,CAAC,QAAQ,CAAC,OAAD,EAAU,GAAV,CAAb,EAA6B,OAAO,CAAC,IAAR,CAAa,GAAb;AAC9B;;AAED,EAAA,QAAQ,CAAC,IAAT,CAAc,OAAd;AAEA,SAAO,OAAP;AACD","sourceRoot":"","sourcesContent":["import dateutil from '../dateutil';\nimport { pymod, isPresent, includes } from '../helpers';\nexport function buildPoslist(bysetpos, timeset, start, end, ii, dayset) {\n    var poslist = [];\n    for (var j = 0; j < bysetpos.length; j++) {\n        var daypos = void 0;\n        var timepos = void 0;\n        var pos = bysetpos[j];\n        if (pos < 0) {\n            daypos = Math.floor(pos / timeset.length);\n            timepos = pymod(pos, timeset.length);\n        }\n        else {\n            daypos = Math.floor((pos - 1) / timeset.length);\n            timepos = pymod(pos - 1, timeset.length);\n        }\n        var tmp = [];\n        for (var k = start; k < end; k++) {\n            var val = dayset[k];\n            if (!isPresent(val))\n                continue;\n            tmp.push(val);\n        }\n        var i = void 0;\n        if (daypos < 0) {\n            i = tmp.slice(daypos)[0];\n        }\n        else {\n            i = tmp[daypos];\n        }\n        var time = timeset[timepos];\n        var date = dateutil.fromOrdinal(ii.yearordinal + i);\n        var res = dateutil.combine(date, time);\n        // XXX: can this ever be in the array?\n        // - compare the actual date instead?\n        if (!includes(poslist, res))\n            poslist.push(res);\n    }\n    dateutil.sort(poslist);\n    return poslist;\n}\n//# sourceMappingURL=poslist.js.map"]},"metadata":{},"sourceType":"module"}