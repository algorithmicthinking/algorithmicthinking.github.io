{"ast":null,"code":"import { padStart } from './helpers';\n/**\n * General date-related utilities.\n * Also handles several incompatibilities between JavaScript and Python\n *\n */\n\nexport var dateutil;\n\n(function (dateutil) {\n  dateutil.MONTH_DAYS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  /**\n   * Number of milliseconds of one day\n   */\n\n  dateutil.ONE_DAY = 1000 * 60 * 60 * 24;\n  /**\n   * @see: <http://docs.python.org/library/datetime.html#datetime.MAXYEAR>\n   */\n\n  dateutil.MAXYEAR = 9999;\n  /**\n   * Python uses 1-Jan-1 as the base for calculating ordinals but we don't\n   * want to confuse the JS engine with milliseconds > Number.MAX_NUMBER,\n   * therefore we use 1-Jan-1970 instead\n   */\n\n  dateutil.ORDINAL_BASE = new Date(Date.UTC(1970, 0, 1));\n  /**\n   * Python: MO-SU: 0 - 6\n   * JS: SU-SAT 0 - 6\n   */\n\n  dateutil.PY_WEEKDAYS = [6, 0, 1, 2, 3, 4, 5];\n  /**\n   * py_date.timetuple()[7]\n   */\n\n  dateutil.getYearDay = function (date) {\n    var dateNoTime = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n    return Math.ceil((dateNoTime.valueOf() - new Date(date.getUTCFullYear(), 0, 1).valueOf()) / dateutil.ONE_DAY) + 1;\n  };\n\n  dateutil.isLeapYear = function (year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  };\n\n  dateutil.isDate = function (value) {\n    return value instanceof Date;\n  };\n\n  dateutil.isValidDate = function (value) {\n    return dateutil.isDate(value) && !isNaN(value.getTime());\n  };\n  /**\n   * @return {Number} the date's timezone offset in ms\n   */\n\n\n  dateutil.tzOffset = function (date) {\n    return date.getTimezoneOffset() * 60 * 1000;\n  };\n  /**\n   * @see: <http://www.mcfedries.com/JavaScript/DaysBetween.asp>\n   */\n\n\n  dateutil.daysBetween = function (date1, date2) {\n    // The number of milliseconds in one day\n    // Convert both dates to milliseconds\n    var date1ms = date1.getTime() - dateutil.tzOffset(date1);\n    var date2ms = date2.getTime() - dateutil.tzOffset(date2); // Calculate the difference in milliseconds\n\n    var differencems = date1ms - date2ms; // Convert back to days and return\n\n    return Math.round(differencems / dateutil.ONE_DAY);\n  };\n  /**\n   * @see: <http://docs.python.org/library/datetime.html#datetime.date.toordinal>\n   */\n\n\n  dateutil.toOrdinal = function (date) {\n    return dateutil.daysBetween(date, dateutil.ORDINAL_BASE);\n  };\n  /**\n   * @see - <http://docs.python.org/library/datetime.html#datetime.date.fromordinal>\n   */\n\n\n  dateutil.fromOrdinal = function (ordinal) {\n    return new Date(dateutil.ORDINAL_BASE.getTime() + ordinal * dateutil.ONE_DAY);\n  };\n\n  dateutil.getMonthDays = function (date) {\n    var month = date.getUTCMonth();\n    return month === 1 && dateutil.isLeapYear(date.getUTCFullYear()) ? 29 : dateutil.MONTH_DAYS[month];\n  };\n  /**\n   * @return {Number} python-like weekday\n   */\n\n\n  dateutil.getWeekday = function (date) {\n    return dateutil.PY_WEEKDAYS[date.getUTCDay()];\n  };\n  /**\n   * @see: <http://docs.python.org/library/calendar.html#calendar.monthrange>\n   */\n\n\n  dateutil.monthRange = function (year, month) {\n    var date = new Date(Date.UTC(year, month, 1));\n    return [dateutil.getWeekday(date), dateutil.getMonthDays(date)];\n  };\n  /**\n   * @see: <http://docs.python.org/library/datetime.html#datetime.datetime.combine>\n   */\n\n\n  dateutil.combine = function (date, time) {\n    time = time || date;\n    return new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), time.getHours(), time.getMinutes(), time.getSeconds(), time.getMilliseconds()));\n  };\n\n  dateutil.clone = function (date) {\n    var dolly = new Date(date.getTime());\n    return dolly;\n  };\n\n  dateutil.cloneDates = function (dates) {\n    var clones = [];\n\n    for (var i = 0; i < dates.length; i++) {\n      clones.push(dateutil.clone(dates[i]));\n    }\n\n    return clones;\n  };\n  /**\n   * Sorts an array of Date or dateutil.Time objects\n   */\n\n\n  dateutil.sort = function (dates) {\n    dates.sort(function (a, b) {\n      return a.getTime() - b.getTime();\n    });\n  };\n\n  dateutil.timeToUntilString = function (time, utc) {\n    if (utc === void 0) {\n      utc = true;\n    }\n\n    var date = new Date(time);\n    return [padStart(date.getUTCFullYear().toString(), 4, '0'), padStart(date.getUTCMonth() + 1, 2, '0'), padStart(date.getUTCDate(), 2, '0'), 'T', padStart(date.getUTCHours(), 2, '0'), padStart(date.getUTCMinutes(), 2, '0'), padStart(date.getUTCSeconds(), 2, '0'), utc ? 'Z' : ''].join('');\n  };\n\n  dateutil.untilStringToDate = function (until) {\n    var re = /^(\\d{4})(\\d{2})(\\d{2})(T(\\d{2})(\\d{2})(\\d{2})Z?)?$/;\n    var bits = re.exec(until);\n    if (!bits) throw new Error(\"Invalid UNTIL value: \" + until);\n    return new Date(Date.UTC(parseInt(bits[1], 10), parseInt(bits[2], 10) - 1, parseInt(bits[3], 10), parseInt(bits[5], 10) || 0, parseInt(bits[6], 10) || 0, parseInt(bits[7], 10) || 0));\n  };\n})(dateutil || (dateutil = {}));\n\nexport default dateutil;","map":{"version":3,"sources":["../../../src/dateutil.ts"],"names":[],"mappings":"AAAA,SAAS,QAAT,QAAyB,WAAzB;AAKA;;;;AAIG;;AACH,OAAM,IAAW,QAAX;;AAAN,CAAA,UAAiB,QAAjB,EAAyB;AACV,EAAA,QAAA,CAAA,UAAA,GAAa,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CAAb;AAEb;;AAEG;;AACU,EAAA,QAAA,CAAA,OAAA,GAAU,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAA3B;AAEb;;AAEG;;AACU,EAAA,QAAA,CAAA,OAAA,GAAU,IAAV;AAEb;;;;AAIG;;AACU,EAAA,QAAA,CAAA,YAAA,GAAe,IAAI,IAAJ,CAAS,IAAI,CAAC,GAAL,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAT,CAAf;AAEb;;;AAGG;;AACU,EAAA,QAAA,CAAA,WAAA,GAAc,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAd;AAEb;;AAEG;;AACU,EAAA,QAAA,CAAA,UAAA,GAAa,UAAU,IAAV,EAAoB;AAC5C,QAAM,UAAU,GAAG,IAAI,IAAJ,CACjB,IAAI,CAAC,cAAL,EADiB,EAEjB,IAAI,CAAC,WAAL,EAFiB,EAGjB,IAAI,CAAC,UAAL,EAHiB,CAAnB;AAKA,WACE,IAAI,CAAC,IAAL,CACE,CAAC,UAAU,CAAC,OAAX,KACC,IAAI,IAAJ,CAAS,IAAI,CAAC,cAAL,EAAT,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,OAAtC,EADF,IAEE,QAAA,CAAA,OAHJ,IAII,CALN;AAOD,GAbY;;AAeA,EAAA,QAAA,CAAA,UAAA,GAAa,UAAU,IAAV,EAAsB;AAC9C,WAAQ,IAAI,GAAG,CAAP,KAAa,CAAb,IAAkB,IAAI,GAAG,GAAP,KAAe,CAAlC,IAAwC,IAAI,GAAG,GAAP,KAAe,CAA9D;AACD,GAFY;;AAIA,EAAA,QAAA,CAAA,MAAA,GAAS,UAAU,KAAV,EAAoB;AACxC,WAAO,KAAK,YAAY,IAAxB;AACD,GAFY;;AAIA,EAAA,QAAA,CAAA,WAAA,GAAc,UAAU,KAAV,EAAoB;AAC7C,WAAO,QAAA,CAAA,MAAA,CAAO,KAAP,KAAiB,CAAC,KAAK,CAAC,KAAK,CAAC,OAAN,EAAD,CAA9B;AACD,GAFY;AAIb;;AAEG;;;AACU,EAAA,QAAA,CAAA,QAAA,GAAW,UAAU,IAAV,EAAoB;AAC1C,WAAO,IAAI,CAAC,iBAAL,KAA2B,EAA3B,GAAgC,IAAvC;AACD,GAFY;AAIb;;AAEG;;;AACU,EAAA,QAAA,CAAA,WAAA,GAAc,UAAU,KAAV,EAAuB,KAAvB,EAAkC;AAC3D;AACA;AACA,QAAM,OAAO,GAAG,KAAK,CAAC,OAAN,KAAkB,QAAA,CAAA,QAAA,CAAS,KAAT,CAAlC;AACA,QAAM,OAAO,GAAG,KAAK,CAAC,OAAN,KAAkB,QAAA,CAAA,QAAA,CAAS,KAAT,CAAlC,CAJ2D,CAK3D;;AACA,QAAM,YAAY,GAAG,OAAO,GAAG,OAA/B,CAN2D,CAO3D;;AACA,WAAO,IAAI,CAAC,KAAL,CAAW,YAAY,GAAG,QAAA,CAAA,OAA1B,CAAP;AACD,GATY;AAWb;;AAEG;;;AACU,EAAA,QAAA,CAAA,SAAA,GAAY,UAAU,IAAV,EAAoB;AAC3C,WAAO,QAAA,CAAA,WAAA,CAAY,IAAZ,EAAkB,QAAA,CAAA,YAAlB,CAAP;AACD,GAFY;AAIb;;AAEG;;;AACU,EAAA,QAAA,CAAA,WAAA,GAAc,UAAU,OAAV,EAAyB;AAClD,WAAO,IAAI,IAAJ,CAAS,QAAA,CAAA,YAAA,CAAa,OAAb,KAAyB,OAAO,GAAG,QAAA,CAAA,OAA5C,CAAP;AACD,GAFY;;AAIA,EAAA,QAAA,CAAA,YAAA,GAAe,UAAU,IAAV,EAAoB;AAC9C,QAAM,KAAK,GAAG,IAAI,CAAC,WAAL,EAAd;AACA,WAAO,KAAK,KAAK,CAAV,IAAe,QAAA,CAAA,UAAA,CAAW,IAAI,CAAC,cAAL,EAAX,CAAf,GACH,EADG,GAEH,QAAA,CAAA,UAAA,CAAW,KAAX,CAFJ;AAGD,GALY;AAOb;;AAEG;;;AACU,EAAA,QAAA,CAAA,UAAA,GAAa,UAAU,IAAV,EAAoB;AAC5C,WAAO,QAAA,CAAA,WAAA,CAAY,IAAI,CAAC,SAAL,EAAZ,CAAP;AACD,GAFY;AAIb;;AAEG;;;AACU,EAAA,QAAA,CAAA,UAAA,GAAa,UAAU,IAAV,EAAwB,KAAxB,EAAqC;AAC7D,QAAM,IAAI,GAAG,IAAI,IAAJ,CAAS,IAAI,CAAC,GAAL,CAAS,IAAT,EAAe,KAAf,EAAsB,CAAtB,CAAT,CAAb;AACA,WAAO,CAAC,QAAA,CAAA,UAAA,CAAW,IAAX,CAAD,EAAmB,QAAA,CAAA,YAAA,CAAa,IAAb,CAAnB,CAAP;AACD,GAHY;AAKb;;AAEG;;;AACU,EAAA,QAAA,CAAA,OAAA,GAAU,UAAU,IAAV,EAAsB,IAAtB,EAAuC;AAC5D,IAAA,IAAI,GAAG,IAAI,IAAI,IAAf;AACA,WAAO,IAAI,IAAJ,CACL,IAAI,CAAC,GAAL,CACE,IAAI,CAAC,cAAL,EADF,EAEE,IAAI,CAAC,WAAL,EAFF,EAGE,IAAI,CAAC,UAAL,EAHF,EAIE,IAAI,CAAC,QAAL,EAJF,EAKE,IAAI,CAAC,UAAL,EALF,EAME,IAAI,CAAC,UAAL,EANF,EAOE,IAAI,CAAC,eAAL,EAPF,CADK,CAAP;AAWD,GAbY;;AAeA,EAAA,QAAA,CAAA,KAAA,GAAQ,UAAU,IAAV,EAA2B;AAC9C,QAAM,KAAK,GAAG,IAAI,IAAJ,CAAS,IAAI,CAAC,OAAL,EAAT,CAAd;AACA,WAAO,KAAP;AACD,GAHY;;AAKA,EAAA,QAAA,CAAA,UAAA,GAAa,UAAU,KAAV,EAAgC;AACxD,QAAM,MAAM,GAAG,EAAf;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrC,MAAA,MAAM,CAAC,IAAP,CAAY,QAAA,CAAA,KAAA,CAAM,KAAK,CAAC,CAAD,CAAX,CAAZ;AACD;;AACD,WAAO,MAAP;AACD,GANY;AAQb;;AAEG;;;AACU,EAAA,QAAA,CAAA,IAAA,GAAO,UAA6B,KAA7B,EAAuC;AACzD,IAAA,KAAK,CAAC,IAAN,CAAW,UAAU,CAAV,EAAa,CAAb,EAAc;AACvB,aAAO,CAAC,CAAC,OAAF,KAAc,CAAC,CAAC,OAAF,EAArB;AACD,KAFD;AAGD,GAJY;;AAMA,EAAA,QAAA,CAAA,iBAAA,GAAoB,UAAU,IAAV,EAAwB,GAAxB,EAAkC;AAAV,QAAA,GAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,GAAA,GAAA,IAAA;AAAU;;AACjE,QAAM,IAAI,GAAG,IAAI,IAAJ,CAAS,IAAT,CAAb;AACA,WAAO,CACL,QAAQ,CAAC,IAAI,CAAC,cAAL,GAAsB,QAAtB,EAAD,EAAmC,CAAnC,EAAsC,GAAtC,CADH,EAEL,QAAQ,CAAC,IAAI,CAAC,WAAL,KAAqB,CAAtB,EAAyB,CAAzB,EAA4B,GAA5B,CAFH,EAGL,QAAQ,CAAC,IAAI,CAAC,UAAL,EAAD,EAAoB,CAApB,EAAuB,GAAvB,CAHH,EAIL,GAJK,EAKL,QAAQ,CAAC,IAAI,CAAC,WAAL,EAAD,EAAqB,CAArB,EAAwB,GAAxB,CALH,EAML,QAAQ,CAAC,IAAI,CAAC,aAAL,EAAD,EAAuB,CAAvB,EAA0B,GAA1B,CANH,EAOL,QAAQ,CAAC,IAAI,CAAC,aAAL,EAAD,EAAuB,CAAvB,EAA0B,GAA1B,CAPH,EAQL,GAAG,GAAG,GAAH,GAAS,EARP,EASL,IATK,CASA,EATA,CAAP;AAUD,GAZY;;AAcA,EAAA,QAAA,CAAA,iBAAA,GAAoB,UAAU,KAAV,EAAuB;AACtD,QAAM,EAAE,GAAG,oDAAX;AACA,QAAM,IAAI,GAAG,EAAE,CAAC,IAAH,CAAQ,KAAR,CAAb;AAEA,QAAI,CAAC,IAAL,EAAW,MAAM,IAAI,KAAJ,CAAU,0BAAwB,KAAlC,CAAN;AAEX,WAAO,IAAI,IAAJ,CACL,IAAI,CAAC,GAAL,CACE,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV,CADV,EAEE,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV,CAAR,GAAwB,CAF1B,EAGE,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV,CAHV,EAIE,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV,CAAR,IAAyB,CAJ3B,EAKE,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV,CAAR,IAAyB,CAL3B,EAME,QAAQ,CAAC,IAAI,CAAC,CAAD,CAAL,EAAU,EAAV,CAAR,IAAyB,CAN3B,CADK,CAAP;AAUD,GAhBY;AAkBd,CAzLD,EAAiB,QAAQ,KAAR,QAAQ,GAAA,EAAA,CAAzB;;AA2LA,eAAe,QAAf","sourceRoot":"","sourcesContent":["import { padStart } from './helpers';\n/**\n * General date-related utilities.\n * Also handles several incompatibilities between JavaScript and Python\n *\n */\nexport var dateutil;\n(function (dateutil) {\n    dateutil.MONTH_DAYS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    /**\n     * Number of milliseconds of one day\n     */\n    dateutil.ONE_DAY = 1000 * 60 * 60 * 24;\n    /**\n     * @see: <http://docs.python.org/library/datetime.html#datetime.MAXYEAR>\n     */\n    dateutil.MAXYEAR = 9999;\n    /**\n     * Python uses 1-Jan-1 as the base for calculating ordinals but we don't\n     * want to confuse the JS engine with milliseconds > Number.MAX_NUMBER,\n     * therefore we use 1-Jan-1970 instead\n     */\n    dateutil.ORDINAL_BASE = new Date(Date.UTC(1970, 0, 1));\n    /**\n     * Python: MO-SU: 0 - 6\n     * JS: SU-SAT 0 - 6\n     */\n    dateutil.PY_WEEKDAYS = [6, 0, 1, 2, 3, 4, 5];\n    /**\n     * py_date.timetuple()[7]\n     */\n    dateutil.getYearDay = function (date) {\n        var dateNoTime = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n        return (Math.ceil((dateNoTime.valueOf() -\n            new Date(date.getUTCFullYear(), 0, 1).valueOf()) /\n            dateutil.ONE_DAY) + 1);\n    };\n    dateutil.isLeapYear = function (year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    };\n    dateutil.isDate = function (value) {\n        return value instanceof Date;\n    };\n    dateutil.isValidDate = function (value) {\n        return dateutil.isDate(value) && !isNaN(value.getTime());\n    };\n    /**\n     * @return {Number} the date's timezone offset in ms\n     */\n    dateutil.tzOffset = function (date) {\n        return date.getTimezoneOffset() * 60 * 1000;\n    };\n    /**\n     * @see: <http://www.mcfedries.com/JavaScript/DaysBetween.asp>\n     */\n    dateutil.daysBetween = function (date1, date2) {\n        // The number of milliseconds in one day\n        // Convert both dates to milliseconds\n        var date1ms = date1.getTime() - dateutil.tzOffset(date1);\n        var date2ms = date2.getTime() - dateutil.tzOffset(date2);\n        // Calculate the difference in milliseconds\n        var differencems = date1ms - date2ms;\n        // Convert back to days and return\n        return Math.round(differencems / dateutil.ONE_DAY);\n    };\n    /**\n     * @see: <http://docs.python.org/library/datetime.html#datetime.date.toordinal>\n     */\n    dateutil.toOrdinal = function (date) {\n        return dateutil.daysBetween(date, dateutil.ORDINAL_BASE);\n    };\n    /**\n     * @see - <http://docs.python.org/library/datetime.html#datetime.date.fromordinal>\n     */\n    dateutil.fromOrdinal = function (ordinal) {\n        return new Date(dateutil.ORDINAL_BASE.getTime() + ordinal * dateutil.ONE_DAY);\n    };\n    dateutil.getMonthDays = function (date) {\n        var month = date.getUTCMonth();\n        return month === 1 && dateutil.isLeapYear(date.getUTCFullYear())\n            ? 29\n            : dateutil.MONTH_DAYS[month];\n    };\n    /**\n     * @return {Number} python-like weekday\n     */\n    dateutil.getWeekday = function (date) {\n        return dateutil.PY_WEEKDAYS[date.getUTCDay()];\n    };\n    /**\n     * @see: <http://docs.python.org/library/calendar.html#calendar.monthrange>\n     */\n    dateutil.monthRange = function (year, month) {\n        var date = new Date(Date.UTC(year, month, 1));\n        return [dateutil.getWeekday(date), dateutil.getMonthDays(date)];\n    };\n    /**\n     * @see: <http://docs.python.org/library/datetime.html#datetime.datetime.combine>\n     */\n    dateutil.combine = function (date, time) {\n        time = time || date;\n        return new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), time.getHours(), time.getMinutes(), time.getSeconds(), time.getMilliseconds()));\n    };\n    dateutil.clone = function (date) {\n        var dolly = new Date(date.getTime());\n        return dolly;\n    };\n    dateutil.cloneDates = function (dates) {\n        var clones = [];\n        for (var i = 0; i < dates.length; i++) {\n            clones.push(dateutil.clone(dates[i]));\n        }\n        return clones;\n    };\n    /**\n     * Sorts an array of Date or dateutil.Time objects\n     */\n    dateutil.sort = function (dates) {\n        dates.sort(function (a, b) {\n            return a.getTime() - b.getTime();\n        });\n    };\n    dateutil.timeToUntilString = function (time, utc) {\n        if (utc === void 0) { utc = true; }\n        var date = new Date(time);\n        return [\n            padStart(date.getUTCFullYear().toString(), 4, '0'),\n            padStart(date.getUTCMonth() + 1, 2, '0'),\n            padStart(date.getUTCDate(), 2, '0'),\n            'T',\n            padStart(date.getUTCHours(), 2, '0'),\n            padStart(date.getUTCMinutes(), 2, '0'),\n            padStart(date.getUTCSeconds(), 2, '0'),\n            utc ? 'Z' : ''\n        ].join('');\n    };\n    dateutil.untilStringToDate = function (until) {\n        var re = /^(\\d{4})(\\d{2})(\\d{2})(T(\\d{2})(\\d{2})(\\d{2})Z?)?$/;\n        var bits = re.exec(until);\n        if (!bits)\n            throw new Error(\"Invalid UNTIL value: \" + until);\n        return new Date(Date.UTC(parseInt(bits[1], 10), parseInt(bits[2], 10) - 1, parseInt(bits[3], 10), parseInt(bits[5], 10) || 0, parseInt(bits[6], 10) || 0, parseInt(bits[7], 10) || 0));\n    };\n})(dateutil || (dateutil = {}));\nexport default dateutil;\n//# sourceMappingURL=dateutil.js.map"]},"metadata":{},"sourceType":"module"}