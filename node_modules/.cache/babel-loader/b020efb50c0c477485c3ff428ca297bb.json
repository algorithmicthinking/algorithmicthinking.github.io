{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadCalendarAPI = loadCalendarAPI;\nexports.getEventsList = getEventsList;\n/** Loads google calendar api\r\n * @param {string} apiKey api key for google's calendar api\r\n * @return {Promise} resolves when api is successfully loaded and rejects when an error occurs\r\n */\n\nfunction loadCalendarAPI(apiKey) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/api.js\";\n    document.body.appendChild(script);\n\n    script.onload = function () {\n      gapi.load(\"client\", function () {\n        gapi.client.init({\n          apiKey: apiKey\n        }).then(function () {\n          gapi.client.load(\"https://content.googleapis.com/discovery/v1/apis/calendar/v3/rest\").then(function () {\n            return resolve(\"GAPI client successfully loaded for API\");\n          }, function (err) {\n            return reject(err);\n          });\n        });\n      });\n    };\n  });\n}\n/** query calendar API for events\r\n * @param {string} calendarId id of the calendar, looks like s9ajkhr604dfrmvm7185lesou0@group.calendar.google.com\r\n * @param {number} [maxResults=1000] maximum number of events returned, can be up to 2500, currently doesn't support more events\r\n * @returns {Object} see https://developers.google.com/calendar/v3/reference/events/list for shape of response object\r\n */\n\n\nfunction getEventsList(calendarId) {\n  var maxResults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n  return gapi.client.calendar.events.list({\n    calendarId: calendarId,\n    maxResults: maxResults\n  });\n}","map":{"version":3,"sources":["/Users/rsha256/cal/algorithmicthinking.github.io/node_modules/@ericz1803/react-google-calendar/utils/googleCalendarAPI.js"],"names":["Object","defineProperty","exports","value","loadCalendarAPI","getEventsList","apiKey","Promise","resolve","reject","script","document","createElement","src","body","appendChild","onload","gapi","load","client","init","then","err","calendarId","maxResults","arguments","length","undefined","calendar","events","list"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,eAAR,GAA0BA,eAA1B;AACAF,OAAO,CAACG,aAAR,GAAwBA,aAAxB;AAEA;AACA;AACA;AACA;;AACA,SAASD,eAAT,CAAyBE,MAAzB,EAAiC;AAC/B,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,QAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,IAAAA,MAAM,CAACG,GAAP,GAAa,mCAAb;AACAF,IAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,MAA1B;;AAEAA,IAAAA,MAAM,CAACM,MAAP,GAAgB,YAAY;AAC1BC,MAAAA,IAAI,CAACC,IAAL,CAAU,QAAV,EAAoB,YAAY;AAC9BD,QAAAA,IAAI,CAACE,MAAL,CAAYC,IAAZ,CAAiB;AACfd,UAAAA,MAAM,EAAEA;AADO,SAAjB,EAEGe,IAFH,CAEQ,YAAY;AAClBJ,UAAAA,IAAI,CAACE,MAAL,CAAYD,IAAZ,CAAiB,mEAAjB,EAAsFG,IAAtF,CAA2F,YAAY;AACrG,mBAAOb,OAAO,CAAC,yCAAD,CAAd;AACD,WAFD,EAEG,UAAUc,GAAV,EAAe;AAChB,mBAAOb,MAAM,CAACa,GAAD,CAAb;AACD,WAJD;AAKD,SARD;AASD,OAVD;AAWD,KAZD;AAaD,GAlBM,CAAP;AAmBD;AACD;AACA;AACA;AACA;AACA;;;AAGA,SAASjB,aAAT,CAAuBkB,UAAvB,EAAmC;AACjC,MAAIC,UAAU,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAArF;AACA,SAAOR,IAAI,CAACE,MAAL,CAAYS,QAAZ,CAAqBC,MAArB,CAA4BC,IAA5B,CAAiC;AACtCP,IAAAA,UAAU,EAAEA,UAD0B;AAEtCC,IAAAA,UAAU,EAAEA;AAF0B,GAAjC,CAAP;AAID","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadCalendarAPI = loadCalendarAPI;\nexports.getEventsList = getEventsList;\n\n/** Loads google calendar api\r\n * @param {string} apiKey api key for google's calendar api\r\n * @return {Promise} resolves when api is successfully loaded and rejects when an error occurs\r\n */\nfunction loadCalendarAPI(apiKey) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/api.js\";\n    document.body.appendChild(script);\n\n    script.onload = function () {\n      gapi.load(\"client\", function () {\n        gapi.client.init({\n          apiKey: apiKey\n        }).then(function () {\n          gapi.client.load(\"https://content.googleapis.com/discovery/v1/apis/calendar/v3/rest\").then(function () {\n            return resolve(\"GAPI client successfully loaded for API\");\n          }, function (err) {\n            return reject(err);\n          });\n        });\n      });\n    };\n  });\n}\n/** query calendar API for events\r\n * @param {string} calendarId id of the calendar, looks like s9ajkhr604dfrmvm7185lesou0@group.calendar.google.com\r\n * @param {number} [maxResults=1000] maximum number of events returned, can be up to 2500, currently doesn't support more events\r\n * @returns {Object} see https://developers.google.com/calendar/v3/reference/events/list for shape of response object\r\n */\n\n\nfunction getEventsList(calendarId) {\n  var maxResults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n  return gapi.client.calendar.events.list({\n    calendarId: calendarId,\n    maxResults: maxResults\n  });\n}"]},"metadata":{},"sourceType":"script"}