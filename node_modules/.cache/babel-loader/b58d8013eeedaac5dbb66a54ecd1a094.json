{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rsha256/cal/extracurriculars/algorithmicthinking.github.io/src/sp21/src/components/Toggle.js\";\nimport React from \"react\";\nimport { func, string } from \"prop-types\";\nimport styled from \"styled-components\";\nimport MoonIcon from \"../img/icons/moon.svg\";\nimport SunIcon from \"../img/icons/sun.svg\";\nconst ToggleContainer = styled.button`\n  background: ${({\n  theme\n}) => theme.gradient};\n  border: 2px solid ${({\n  theme\n}) => theme.toggleBorder};\n  border-radius: 30px;\n  cursor: pointer;\n  display: flex;\n  font-size: 0.5rem;\n  justify-content: space-between;\n  margin: 0 auto;\n  overflow: hidden;\n  padding: 0.5rem;\n  position: relative;\n  width: 5rem;\n  height: 3rem;\n\n  img {\n    height: auto;\n    width: 2.5rem;\n    transition: all 0.3s linear;\n\n    &:first-child {\n      transform: ${({\n  lightTheme\n}) => lightTheme ? \"translateY(0)\" : \"translateY(100px)\"};\n    }\n\n    &:nth-child(2) {\n      transform: ${({\n  lightTheme\n}) => lightTheme ? \"translateY(-100px)\" : \"translateY(0)\"};\n    }\n  }\n`;\n_c = ToggleContainer;\n\nconst Toggle = ({\n  theme,\n  toggleTheme\n}) => {\n  const isLight = theme === \"light\";\n  return /*#__PURE__*/_jsxDEV(ToggleContainer, {\n    lightTheme: isLight,\n    onClick: toggleTheme,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: SunIcon,\n      style: {\n        width: 30,\n        height: 30\n      },\n      alt: \"Sun\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: MoonIcon,\n      style: {\n        width: 30,\n        height: 30\n      },\n      alt: \"Moon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Toggle;\nToggle.propTypes = {\n  theme: string.isRequired,\n  toggleTheme: func.isRequired\n};\nexport default Toggle;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ToggleContainer\");\n$RefreshReg$(_c2, \"Toggle\");","map":{"version":3,"sources":["/Users/rsha256/cal/extracurriculars/algorithmicthinking.github.io/src/sp21/src/components/Toggle.js"],"names":["React","func","string","styled","ToggleContainer","button","theme","gradient","toggleBorder","lightTheme","Toggle","toggleTheme","isLight","SunIcon","width","height","MoonIcon","propTypes","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,YAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAKA,MAAMC,eAAe,GAAGD,MAAM,CAACE,MAAO;AACtC,gBAAgB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,QAAS;AAC9C,sBAAsB,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,YAAa;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACXA,UAAU,GAAG,eAAH,GAAqB,mBAAoB;AAC3D;AACA;AACA;AACA,mBAAmB,CAAC;AAAEA,EAAAA;AAAF,CAAD,KACXA,UAAU,GAAG,oBAAH,GAA0B,eAAgB;AAC5D;AACA;AACA,CA9BA;KAAML,e;;AAgCN,MAAMM,MAAM,GAAG,CAAC;AAAEJ,EAAAA,KAAF;AAASK,EAAAA;AAAT,CAAD,KAA4B;AACzC,QAAMC,OAAO,GAAGN,KAAK,KAAK,OAA1B;AAEA,sBACE,QAAC,eAAD;AAAiB,IAAA,UAAU,EAAEM,OAA7B;AAAsC,IAAA,OAAO,EAAED,WAA/C;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEE,OAAV;AAAmB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,MAAM,EAAE;AAArB,OAA1B;AAAqD,MAAA,GAAG,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,GAAG,EAAEC,QAAV;AAAoB,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,MAAM,EAAE;AAArB,OAA3B;AAAsD,MAAA,GAAG,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CATD;;MAAML,M;AAWNA,MAAM,CAACO,SAAP,GAAmB;AACjBX,EAAAA,KAAK,EAAEJ,MAAM,CAACgB,UADG;AAEjBP,EAAAA,WAAW,EAAEV,IAAI,CAACiB;AAFD,CAAnB;AAKA,eAAeR,MAAf","sourcesContent":["import React from \"react\";\nimport { func, string } from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport MoonIcon from \"../img/icons/moon.svg\";\nimport SunIcon from \"../img/icons/sun.svg\";\n\nconst ToggleContainer = styled.button`\n  background: ${({ theme }) => theme.gradient};\n  border: 2px solid ${({ theme }) => theme.toggleBorder};\n  border-radius: 30px;\n  cursor: pointer;\n  display: flex;\n  font-size: 0.5rem;\n  justify-content: space-between;\n  margin: 0 auto;\n  overflow: hidden;\n  padding: 0.5rem;\n  position: relative;\n  width: 5rem;\n  height: 3rem;\n\n  img {\n    height: auto;\n    width: 2.5rem;\n    transition: all 0.3s linear;\n\n    &:first-child {\n      transform: ${({ lightTheme }) =>\n        lightTheme ? \"translateY(0)\" : \"translateY(100px)\"};\n    }\n\n    &:nth-child(2) {\n      transform: ${({ lightTheme }) =>\n        lightTheme ? \"translateY(-100px)\" : \"translateY(0)\"};\n    }\n  }\n`;\n\nconst Toggle = ({ theme, toggleTheme }) => {\n  const isLight = theme === \"light\";\n\n  return (\n    <ToggleContainer lightTheme={isLight} onClick={toggleTheme}>\n      <img src={SunIcon} style={{ width: 30, height: 30 }} alt=\"Sun\" />\n      <img src={MoonIcon} style={{ width: 30, height: 30 }} alt=\"Moon\" />\n    </ToggleContainer>\n  );\n};\n\nToggle.propTypes = {\n  theme: string.isRequired,\n  toggleTheme: func.isRequired,\n};\n\nexport default Toggle;\n"]},"metadata":{},"sourceType":"module"}