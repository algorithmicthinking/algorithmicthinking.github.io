{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nexport const useDarkMode = () => {\n  _s();\n\n  const [theme, setTheme] = useState(window.localStorage.getItem('theme') || 'light');\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      window.localStorage.setItem('theme', 'dark');\n      setTheme('dark');\n    } else {\n      window.localStorage.setItem('theme', 'light');\n      setTheme('light');\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    localTheme && setTheme(localTheme);\n  }, []);\n  return [theme, toggleTheme];\n};\n\n_s(useDarkMode, \"JIuuYFhs79viktna8d9o3My3RG8=\");","map":{"version":3,"sources":["/Users/rsha256/algorithmicthinking.github.io/src/components/UseDarkMode.js"],"names":["useEffect","useState","useDarkMode","theme","setTheme","window","localStorage","getItem","toggleTheme","setItem","localTheme"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAACI,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,KAAwC,OAAzC,CAAlC;;AAEF,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIL,KAAK,KAAK,OAAd,EAAuB;AACrBE,MAAAA,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4B,OAA5B,EAAqC,MAArC;AACAL,MAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,KAHD,MAGO;AACLC,MAAAA,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4B,OAA5B,EAAqC,OAArC;AACAL,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF,GARD;;AAUAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,UAAU,GAAGL,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAnB;AACAG,IAAAA,UAAU,IAAIN,QAAQ,CAACM,UAAD,CAAtB;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SAAO,CAACP,KAAD,EAAQK,WAAR,CAAP;AACD,CAnBM;;GAAMN,W","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const useDarkMode = () => {\n    const [theme, setTheme] = useState(window.localStorage.getItem('theme') || 'light');\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      window.localStorage.setItem('theme', 'dark')\n      setTheme('dark')\n    } else {\n      window.localStorage.setItem('theme', 'light')\n      setTheme('light')\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    localTheme && setTheme(localTheme);\n  }, []);\n\n  return [theme, toggleTheme]\n};\n"]},"metadata":{},"sourceType":"module"}