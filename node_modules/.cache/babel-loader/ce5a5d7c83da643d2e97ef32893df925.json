{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Frequency } from './types';\nimport { pymod, divmod, empty, includes } from './helpers';\nimport { dateutil } from './dateutil';\n\nvar Time =\n/** @class */\nfunction () {\n  function Time(hour, minute, second, millisecond) {\n    this.hour = hour;\n    this.minute = minute;\n    this.second = second;\n    this.millisecond = millisecond || 0;\n  }\n\n  Time.prototype.getHours = function () {\n    return this.hour;\n  };\n\n  Time.prototype.getMinutes = function () {\n    return this.minute;\n  };\n\n  Time.prototype.getSeconds = function () {\n    return this.second;\n  };\n\n  Time.prototype.getMilliseconds = function () {\n    return this.millisecond;\n  };\n\n  Time.prototype.getTime = function () {\n    return (this.hour * 60 * 60 + this.minute * 60 + this.second) * 1000 + this.millisecond;\n  };\n\n  return Time;\n}();\n\nexport { Time };\n\nvar DateTime =\n/** @class */\nfunction (_super) {\n  __extends(DateTime, _super);\n\n  function DateTime(year, month, day, hour, minute, second, millisecond) {\n    var _this = _super.call(this, hour, minute, second, millisecond) || this;\n\n    _this.year = year;\n    _this.month = month;\n    _this.day = day;\n    return _this;\n  }\n\n  DateTime.fromDate = function (date) {\n    return new this(date.getUTCFullYear(), date.getUTCMonth() + 1, date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.valueOf() % 1000);\n  };\n\n  DateTime.prototype.getWeekday = function () {\n    return dateutil.getWeekday(new Date(this.getTime()));\n  };\n\n  DateTime.prototype.getTime = function () {\n    return new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond)).getTime();\n  };\n\n  DateTime.prototype.getDay = function () {\n    return this.day;\n  };\n\n  DateTime.prototype.getMonth = function () {\n    return this.month;\n  };\n\n  DateTime.prototype.getYear = function () {\n    return this.year;\n  };\n\n  DateTime.prototype.addYears = function (years) {\n    this.year += years;\n  };\n\n  DateTime.prototype.addMonths = function (months) {\n    this.month += months;\n\n    if (this.month > 12) {\n      var yearDiv = Math.floor(this.month / 12);\n      var monthMod = pymod(this.month, 12);\n      this.month = monthMod;\n      this.year += yearDiv;\n\n      if (this.month === 0) {\n        this.month = 12;\n        --this.year;\n      }\n    }\n  };\n\n  DateTime.prototype.addWeekly = function (days, wkst) {\n    if (wkst > this.getWeekday()) {\n      this.day += -(this.getWeekday() + 1 + (6 - wkst)) + days * 7;\n    } else {\n      this.day += -(this.getWeekday() - wkst) + days * 7;\n    }\n\n    this.fixDay();\n  };\n\n  DateTime.prototype.addDaily = function (days) {\n    this.day += days;\n    this.fixDay();\n  };\n\n  DateTime.prototype.addHours = function (hours, filtered, byhour) {\n    if (filtered) {\n      // Jump to one iteration before next day\n      this.hour += Math.floor((23 - this.hour) / hours) * hours;\n    }\n\n    while (true) {\n      this.hour += hours;\n\n      var _a = divmod(this.hour, 24),\n          dayDiv = _a.div,\n          hourMod = _a.mod;\n\n      if (dayDiv) {\n        this.hour = hourMod;\n        this.addDaily(dayDiv);\n      }\n\n      if (empty(byhour) || includes(byhour, this.hour)) break;\n    }\n  };\n\n  DateTime.prototype.addMinutes = function (minutes, filtered, byhour, byminute) {\n    if (filtered) {\n      // Jump to one iteration before next day\n      this.minute += Math.floor((1439 - (this.hour * 60 + this.minute)) / minutes) * minutes;\n    }\n\n    while (true) {\n      this.minute += minutes;\n\n      var _a = divmod(this.minute, 60),\n          hourDiv = _a.div,\n          minuteMod = _a.mod;\n\n      if (hourDiv) {\n        this.minute = minuteMod;\n        this.addHours(hourDiv, false, byhour);\n      }\n\n      if ((empty(byhour) || includes(byhour, this.hour)) && (empty(byminute) || includes(byminute, this.minute))) {\n        break;\n      }\n    }\n  };\n\n  DateTime.prototype.addSeconds = function (seconds, filtered, byhour, byminute, bysecond) {\n    if (filtered) {\n      // Jump to one iteration before next day\n      this.second += Math.floor((86399 - (this.hour * 3600 + this.minute * 60 + this.second)) / seconds) * seconds;\n    }\n\n    while (true) {\n      this.second += seconds;\n\n      var _a = divmod(this.second, 60),\n          minuteDiv = _a.div,\n          secondMod = _a.mod;\n\n      if (minuteDiv) {\n        this.second = secondMod;\n        this.addMinutes(minuteDiv, false, byhour, byminute);\n      }\n\n      if ((empty(byhour) || includes(byhour, this.hour)) && (empty(byminute) || includes(byminute, this.minute)) && (empty(bysecond) || includes(bysecond, this.second))) {\n        break;\n      }\n    }\n  };\n\n  DateTime.prototype.fixDay = function () {\n    if (this.day <= 28) {\n      return;\n    }\n\n    var daysinmonth = dateutil.monthRange(this.year, this.month - 1)[1];\n\n    if (this.day <= daysinmonth) {\n      return;\n    }\n\n    while (this.day > daysinmonth) {\n      this.day -= daysinmonth;\n      ++this.month;\n\n      if (this.month === 13) {\n        this.month = 1;\n        ++this.year;\n\n        if (this.year > dateutil.MAXYEAR) {\n          return;\n        }\n      }\n\n      daysinmonth = dateutil.monthRange(this.year, this.month - 1)[1];\n    }\n  };\n\n  DateTime.prototype.add = function (options, filtered) {\n    var freq = options.freq,\n        interval = options.interval,\n        wkst = options.wkst,\n        byhour = options.byhour,\n        byminute = options.byminute,\n        bysecond = options.bysecond;\n\n    switch (freq) {\n      case Frequency.YEARLY:\n        return this.addYears(interval);\n\n      case Frequency.MONTHLY:\n        return this.addMonths(interval);\n\n      case Frequency.WEEKLY:\n        return this.addWeekly(interval, wkst);\n\n      case Frequency.DAILY:\n        return this.addDaily(interval);\n\n      case Frequency.HOURLY:\n        return this.addHours(interval, filtered, byhour);\n\n      case Frequency.MINUTELY:\n        return this.addMinutes(interval, filtered, byhour, byminute);\n\n      case Frequency.SECONDLY:\n        return this.addSeconds(interval, filtered, byhour, byminute, bysecond);\n    }\n  };\n\n  return DateTime;\n}(Time);\n\nexport { DateTime };","map":{"version":3,"sources":["../../../src/datetime.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { Frequency } from './types';\nimport { pymod, divmod, empty, includes } from './helpers';\nimport { dateutil } from './dateutil';\nvar Time = /** @class */ (function () {\n    function Time(hour, minute, second, millisecond) {\n        this.hour = hour;\n        this.minute = minute;\n        this.second = second;\n        this.millisecond = millisecond || 0;\n    }\n    Time.prototype.getHours = function () {\n        return this.hour;\n    };\n    Time.prototype.getMinutes = function () {\n        return this.minute;\n    };\n    Time.prototype.getSeconds = function () {\n        return this.second;\n    };\n    Time.prototype.getMilliseconds = function () {\n        return this.millisecond;\n    };\n    Time.prototype.getTime = function () {\n        return ((this.hour * 60 * 60 + this.minute * 60 + this.second) * 1000 +\n            this.millisecond);\n    };\n    return Time;\n}());\nexport { Time };\nvar DateTime = /** @class */ (function (_super) {\n    __extends(DateTime, _super);\n    function DateTime(year, month, day, hour, minute, second, millisecond) {\n        var _this = _super.call(this, hour, minute, second, millisecond) || this;\n        _this.year = year;\n        _this.month = month;\n        _this.day = day;\n        return _this;\n    }\n    DateTime.fromDate = function (date) {\n        return new this(date.getUTCFullYear(), date.getUTCMonth() + 1, date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.valueOf() % 1000);\n    };\n    DateTime.prototype.getWeekday = function () {\n        return dateutil.getWeekday(new Date(this.getTime()));\n    };\n    DateTime.prototype.getTime = function () {\n        return new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond)).getTime();\n    };\n    DateTime.prototype.getDay = function () {\n        return this.day;\n    };\n    DateTime.prototype.getMonth = function () {\n        return this.month;\n    };\n    DateTime.prototype.getYear = function () {\n        return this.year;\n    };\n    DateTime.prototype.addYears = function (years) {\n        this.year += years;\n    };\n    DateTime.prototype.addMonths = function (months) {\n        this.month += months;\n        if (this.month > 12) {\n            var yearDiv = Math.floor(this.month / 12);\n            var monthMod = pymod(this.month, 12);\n            this.month = monthMod;\n            this.year += yearDiv;\n            if (this.month === 0) {\n                this.month = 12;\n                --this.year;\n            }\n        }\n    };\n    DateTime.prototype.addWeekly = function (days, wkst) {\n        if (wkst > this.getWeekday()) {\n            this.day += -(this.getWeekday() + 1 + (6 - wkst)) + days * 7;\n        }\n        else {\n            this.day += -(this.getWeekday() - wkst) + days * 7;\n        }\n        this.fixDay();\n    };\n    DateTime.prototype.addDaily = function (days) {\n        this.day += days;\n        this.fixDay();\n    };\n    DateTime.prototype.addHours = function (hours, filtered, byhour) {\n        if (filtered) {\n            // Jump to one iteration before next day\n            this.hour += Math.floor((23 - this.hour) / hours) * hours;\n        }\n        while (true) {\n            this.hour += hours;\n            var _a = divmod(this.hour, 24), dayDiv = _a.div, hourMod = _a.mod;\n            if (dayDiv) {\n                this.hour = hourMod;\n                this.addDaily(dayDiv);\n            }\n            if (empty(byhour) || includes(byhour, this.hour))\n                break;\n        }\n    };\n    DateTime.prototype.addMinutes = function (minutes, filtered, byhour, byminute) {\n        if (filtered) {\n            // Jump to one iteration before next day\n            this.minute +=\n                Math.floor((1439 - (this.hour * 60 + this.minute)) / minutes) * minutes;\n        }\n        while (true) {\n            this.minute += minutes;\n            var _a = divmod(this.minute, 60), hourDiv = _a.div, minuteMod = _a.mod;\n            if (hourDiv) {\n                this.minute = minuteMod;\n                this.addHours(hourDiv, false, byhour);\n            }\n            if ((empty(byhour) || includes(byhour, this.hour)) &&\n                (empty(byminute) || includes(byminute, this.minute))) {\n                break;\n            }\n        }\n    };\n    DateTime.prototype.addSeconds = function (seconds, filtered, byhour, byminute, bysecond) {\n        if (filtered) {\n            // Jump to one iteration before next day\n            this.second +=\n                Math.floor((86399 - (this.hour * 3600 + this.minute * 60 + this.second)) / seconds) * seconds;\n        }\n        while (true) {\n            this.second += seconds;\n            var _a = divmod(this.second, 60), minuteDiv = _a.div, secondMod = _a.mod;\n            if (minuteDiv) {\n                this.second = secondMod;\n                this.addMinutes(minuteDiv, false, byhour, byminute);\n            }\n            if ((empty(byhour) || includes(byhour, this.hour)) &&\n                (empty(byminute) || includes(byminute, this.minute)) &&\n                (empty(bysecond) || includes(bysecond, this.second))) {\n                break;\n            }\n        }\n    };\n    DateTime.prototype.fixDay = function () {\n        if (this.day <= 28) {\n            return;\n        }\n        var daysinmonth = dateutil.monthRange(this.year, this.month - 1)[1];\n        if (this.day <= daysinmonth) {\n            return;\n        }\n        while (this.day > daysinmonth) {\n            this.day -= daysinmonth;\n            ++this.month;\n            if (this.month === 13) {\n                this.month = 1;\n                ++this.year;\n                if (this.year > dateutil.MAXYEAR) {\n                    return;\n                }\n            }\n            daysinmonth = dateutil.monthRange(this.year, this.month - 1)[1];\n        }\n    };\n    DateTime.prototype.add = function (options, filtered) {\n        var freq = options.freq, interval = options.interval, wkst = options.wkst, byhour = options.byhour, byminute = options.byminute, bysecond = options.bysecond;\n        switch (freq) {\n            case Frequency.YEARLY: return this.addYears(interval);\n            case Frequency.MONTHLY: return this.addMonths(interval);\n            case Frequency.WEEKLY: return this.addWeekly(interval, wkst);\n            case Frequency.DAILY: return this.addDaily(interval);\n            case Frequency.HOURLY: return this.addHours(interval, filtered, byhour);\n            case Frequency.MINUTELY: return this.addMinutes(interval, filtered, byhour, byminute);\n            case Frequency.SECONDLY: return this.addSeconds(interval, filtered, byhour, byminute, bysecond);\n        }\n    };\n    return DateTime;\n}(Time));\nexport { DateTime };\n//# sourceMappingURL=datetime.js.map"]},"metadata":{},"sourceType":"module"}