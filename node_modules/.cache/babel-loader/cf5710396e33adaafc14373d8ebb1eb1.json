{"ast":null,"code":"import dateutil from '../dateutil';\nimport { notEmpty, repeat, range, isPresent } from '../helpers';\nimport { Frequency } from '../types';\nimport { rebuildYear } from './yearinfo';\nimport { rebuildMonth } from './monthinfo';\nimport { easter } from './easter';\nimport { Time } from '../datetime'; // =============================================================================\n// Iterinfo\n// =============================================================================\n\nvar Iterinfo =\n/** @class */\nfunction () {\n  function Iterinfo(options) {\n    this.options = options;\n  }\n\n  Iterinfo.prototype.rebuild = function (year, month) {\n    var options = this.options;\n\n    if (year !== this.lastyear) {\n      this.yearinfo = rebuildYear(year, options);\n    }\n\n    if (notEmpty(options.bynweekday) && (month !== this.lastmonth || year !== this.lastyear)) {\n      var _a = this.yearinfo,\n          yearlen = _a.yearlen,\n          mrange = _a.mrange,\n          wdaymask = _a.wdaymask;\n      this.monthinfo = rebuildMonth(year, month, yearlen, mrange, wdaymask, options);\n    }\n\n    if (isPresent(options.byeaster)) {\n      this.eastermask = easter(year, options.byeaster);\n    }\n  };\n\n  Object.defineProperty(Iterinfo.prototype, \"lastyear\", {\n    get: function () {\n      return this.monthinfo ? this.monthinfo.lastyear : null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"lastmonth\", {\n    get: function () {\n      return this.monthinfo ? this.monthinfo.lastmonth : null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"yearlen\", {\n    get: function () {\n      return this.yearinfo.yearlen;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"yearordinal\", {\n    get: function () {\n      return this.yearinfo.yearordinal;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"mrange\", {\n    get: function () {\n      return this.yearinfo.mrange;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"wdaymask\", {\n    get: function () {\n      return this.yearinfo.wdaymask;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"mmask\", {\n    get: function () {\n      return this.yearinfo.mmask;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"wnomask\", {\n    get: function () {\n      return this.yearinfo.wnomask;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"nwdaymask\", {\n    get: function () {\n      return this.monthinfo ? this.monthinfo.nwdaymask : [];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"nextyearlen\", {\n    get: function () {\n      return this.yearinfo.nextyearlen;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"mdaymask\", {\n    get: function () {\n      return this.yearinfo.mdaymask;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"nmdaymask\", {\n    get: function () {\n      return this.yearinfo.nmdaymask;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Iterinfo.prototype.ydayset = function () {\n    return [range(this.yearlen), 0, this.yearlen];\n  };\n\n  Iterinfo.prototype.mdayset = function (_, month, __) {\n    var start = this.mrange[month - 1];\n    var end = this.mrange[month];\n    var set = repeat(null, this.yearlen);\n\n    for (var i = start; i < end; i++) set[i] = i;\n\n    return [set, start, end];\n  };\n\n  Iterinfo.prototype.wdayset = function (year, month, day) {\n    // We need to handle cross-year weeks here.\n    var set = repeat(null, this.yearlen + 7);\n    var i = dateutil.toOrdinal(new Date(Date.UTC(year, month - 1, day))) - this.yearordinal;\n    var start = i;\n\n    for (var j = 0; j < 7; j++) {\n      set[i] = i;\n      ++i;\n      if (this.wdaymask[i] === this.options.wkst) break;\n    }\n\n    return [set, start, i];\n  };\n\n  Iterinfo.prototype.ddayset = function (year, month, day) {\n    var set = repeat(null, this.yearlen);\n    var i = dateutil.toOrdinal(new Date(Date.UTC(year, month - 1, day))) - this.yearordinal;\n    set[i] = i;\n    return [set, i, i + 1];\n  };\n\n  Iterinfo.prototype.htimeset = function (hour, _, second, millisecond) {\n    var _this = this;\n\n    var set = [];\n    this.options.byminute.forEach(function (minute) {\n      set = set.concat(_this.mtimeset(hour, minute, second, millisecond));\n    });\n    dateutil.sort(set);\n    return set;\n  };\n\n  Iterinfo.prototype.mtimeset = function (hour, minute, _, millisecond) {\n    var set = this.options.bysecond.map(function (second) {\n      return new Time(hour, minute, second, millisecond);\n    });\n    dateutil.sort(set);\n    return set;\n  };\n\n  Iterinfo.prototype.stimeset = function (hour, minute, second, millisecond) {\n    return [new Time(hour, minute, second, millisecond)];\n  };\n\n  Iterinfo.prototype.getdayset = function (freq) {\n    switch (freq) {\n      case Frequency.YEARLY:\n        return this.ydayset.bind(this);\n\n      case Frequency.MONTHLY:\n        return this.mdayset.bind(this);\n\n      case Frequency.WEEKLY:\n        return this.wdayset.bind(this);\n\n      case Frequency.DAILY:\n        return this.ddayset.bind(this);\n\n      default:\n        return this.ddayset.bind(this);\n    }\n  };\n\n  Iterinfo.prototype.gettimeset = function (freq) {\n    switch (freq) {\n      case Frequency.HOURLY:\n        return this.htimeset.bind(this);\n\n      case Frequency.MINUTELY:\n        return this.mtimeset.bind(this);\n\n      case Frequency.SECONDLY:\n        return this.stimeset.bind(this);\n    }\n  };\n\n  return Iterinfo;\n}();\n\nexport default Iterinfo;","map":{"version":3,"sources":["../../../../src/iterinfo/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import dateutil from '../dateutil';\nimport { notEmpty, repeat, range, isPresent } from '../helpers';\nimport { Frequency } from '../types';\nimport { rebuildYear } from './yearinfo';\nimport { rebuildMonth } from './monthinfo';\nimport { easter } from './easter';\nimport { Time } from '../datetime';\n// =============================================================================\n// Iterinfo\n// =============================================================================\nvar Iterinfo = /** @class */ (function () {\n    function Iterinfo(options) {\n        this.options = options;\n    }\n    Iterinfo.prototype.rebuild = function (year, month) {\n        var options = this.options;\n        if (year !== this.lastyear) {\n            this.yearinfo = rebuildYear(year, options);\n        }\n        if (notEmpty(options.bynweekday) &&\n            (month !== this.lastmonth || year !== this.lastyear)) {\n            var _a = this.yearinfo, yearlen = _a.yearlen, mrange = _a.mrange, wdaymask = _a.wdaymask;\n            this.monthinfo = rebuildMonth(year, month, yearlen, mrange, wdaymask, options);\n        }\n        if (isPresent(options.byeaster)) {\n            this.eastermask = easter(year, options.byeaster);\n        }\n    };\n    Object.defineProperty(Iterinfo.prototype, \"lastyear\", {\n        get: function () {\n            return this.monthinfo ? this.monthinfo.lastyear : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Iterinfo.prototype, \"lastmonth\", {\n        get: function () {\n            return this.monthinfo ? this.monthinfo.lastmonth : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Iterinfo.prototype, \"yearlen\", {\n        get: function () {\n            return this.yearinfo.yearlen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Iterinfo.prototype, \"yearordinal\", {\n        get: function () {\n            return this.yearinfo.yearordinal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Iterinfo.prototype, \"mrange\", {\n        get: function () {\n            return this.yearinfo.mrange;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Iterinfo.prototype, \"wdaymask\", {\n        get: function () {\n            return this.yearinfo.wdaymask;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Iterinfo.prototype, \"mmask\", {\n        get: function () {\n            return this.yearinfo.mmask;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Iterinfo.prototype, \"wnomask\", {\n        get: function () {\n            return this.yearinfo.wnomask;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Iterinfo.prototype, \"nwdaymask\", {\n        get: function () {\n            return this.monthinfo ? this.monthinfo.nwdaymask : [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Iterinfo.prototype, \"nextyearlen\", {\n        get: function () {\n            return this.yearinfo.nextyearlen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Iterinfo.prototype, \"mdaymask\", {\n        get: function () {\n            return this.yearinfo.mdaymask;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Iterinfo.prototype, \"nmdaymask\", {\n        get: function () {\n            return this.yearinfo.nmdaymask;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Iterinfo.prototype.ydayset = function () {\n        return [range(this.yearlen), 0, this.yearlen];\n    };\n    Iterinfo.prototype.mdayset = function (_, month, __) {\n        var start = this.mrange[month - 1];\n        var end = this.mrange[month];\n        var set = repeat(null, this.yearlen);\n        for (var i = start; i < end; i++)\n            set[i] = i;\n        return [set, start, end];\n    };\n    Iterinfo.prototype.wdayset = function (year, month, day) {\n        // We need to handle cross-year weeks here.\n        var set = repeat(null, this.yearlen + 7);\n        var i = dateutil.toOrdinal(new Date(Date.UTC(year, month - 1, day))) -\n            this.yearordinal;\n        var start = i;\n        for (var j = 0; j < 7; j++) {\n            set[i] = i;\n            ++i;\n            if (this.wdaymask[i] === this.options.wkst)\n                break;\n        }\n        return [set, start, i];\n    };\n    Iterinfo.prototype.ddayset = function (year, month, day) {\n        var set = repeat(null, this.yearlen);\n        var i = dateutil.toOrdinal(new Date(Date.UTC(year, month - 1, day))) -\n            this.yearordinal;\n        set[i] = i;\n        return [set, i, i + 1];\n    };\n    Iterinfo.prototype.htimeset = function (hour, _, second, millisecond) {\n        var _this = this;\n        var set = [];\n        this.options.byminute.forEach(function (minute) {\n            set = set.concat(_this.mtimeset(hour, minute, second, millisecond));\n        });\n        dateutil.sort(set);\n        return set;\n    };\n    Iterinfo.prototype.mtimeset = function (hour, minute, _, millisecond) {\n        var set = this.options.bysecond.map(function (second) {\n            return new Time(hour, minute, second, millisecond);\n        });\n        dateutil.sort(set);\n        return set;\n    };\n    Iterinfo.prototype.stimeset = function (hour, minute, second, millisecond) {\n        return [new Time(hour, minute, second, millisecond)];\n    };\n    Iterinfo.prototype.getdayset = function (freq) {\n        switch (freq) {\n            case Frequency.YEARLY: return this.ydayset.bind(this);\n            case Frequency.MONTHLY: return this.mdayset.bind(this);\n            case Frequency.WEEKLY: return this.wdayset.bind(this);\n            case Frequency.DAILY: return this.ddayset.bind(this);\n            default: return this.ddayset.bind(this);\n        }\n    };\n    Iterinfo.prototype.gettimeset = function (freq) {\n        switch (freq) {\n            case Frequency.HOURLY: return this.htimeset.bind(this);\n            case Frequency.MINUTELY: return this.mtimeset.bind(this);\n            case Frequency.SECONDLY: return this.stimeset.bind(this);\n        }\n    };\n    return Iterinfo;\n}());\nexport default Iterinfo;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}