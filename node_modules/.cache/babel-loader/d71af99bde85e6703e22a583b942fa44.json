{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/rsha256/algorithmicthinking.github.io/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport \"./css/style.css\";\nimport Navbar from \"./components/Navbar\";\nimport Landing from \"./pages/Landing\";\nimport Team from \"./pages/Team\";\nimport Resources from \"./pages/Resources\";\nimport Syllabus from \"./pages/Syllabus\"; // dark theme toggle stuff\n\nimport React, { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './components/Theme';\nimport { GlobalStyles } from './components/Global';\n\nfunction App() {\n  _s();\n\n  const [theme, setTheme] = useState('light');\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      setTheme('dark');\n    } else {\n      setTheme('light');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: lightTheme,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Togdgle theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"It's a light theme!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this) // <div className=\"App\" id=\"home\">\n  //   <Navbar />\n  //   <div className=\"container\">\n  //     <Landing />\n  //     <Team />\n  //     <Resources />\n  //     <Syllabus />\n  //   </div>\n  // </div>\n  ;\n}\n\n_s(App, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rsha256/algorithmicthinking.github.io/src/App.js"],"names":["Navbar","Landing","Team","Resources","Syllabus","React","useState","ThemeProvider","lightTheme","darkTheme","GlobalStyles","App","theme","setTheme","toggleTheme"],"mappings":";;;;;;AAAA,OAAO,WAAP;AACA,OAAO,iBAAP;AAEA,OAAOA,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB,C,CAEA;;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,oBAAtC;AACA,SAASC,YAAT,QAA6B,qBAA7B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,OAAD,CAAlC;;AACA,QAAMQ,WAAW,GAAG,MAAM;AACxB,QAAIF,KAAK,KAAK,OAAd,EAAuB;AACrBC,MAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF,GAND;;AAQA,sBAEE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEL,UAAtB;AAAA,2BACA;AAAA,8BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UAFF,CAYE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBF;AAsBD;;GAhCQG,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport \"./css/style.css\";\n\nimport Navbar from \"./components/Navbar\";\n\nimport Landing from \"./pages/Landing\";\nimport Team from \"./pages/Team\";\nimport Resources from \"./pages/Resources\";\nimport Syllabus from \"./pages/Syllabus\";\n\n// dark theme toggle stuff\nimport React, { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './components/Theme';\nimport { GlobalStyles } from './components/Global';\n\nfunction App() {\n  const [theme, setTheme] = useState('light');\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      setTheme('dark');\n    } else {\n      setTheme('light');\n    }\n  }\n\n  return (\n\n    <ThemeProvider theme={lightTheme}>\n    <>\n      <GlobalStyles />\n      <button>Togdgle theme</button>\n      <h1>It's a light theme!</h1>\n      <footer>\n      </footer>\n    </>\n  </ThemeProvider>\n\n    // <div className=\"App\" id=\"home\">\n    //   <Navbar />\n    //   <div className=\"container\">\n    //     <Landing />\n    //     <Team />\n    //     <Resources />\n    //     <Syllabus />\n    //   </div>\n    // </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}