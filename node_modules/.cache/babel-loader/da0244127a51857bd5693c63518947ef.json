{"ast":null,"code":"// =============================================================================\n// Helper functions\n// =============================================================================\nimport { ALL_WEEKDAYS } from './weekday';\nexport var isPresent = function (value) {\n  return value !== null && value !== undefined;\n};\nexport var isNumber = function (value) {\n  return typeof value === 'number';\n};\nexport var isWeekdayStr = function (value) {\n  return ALL_WEEKDAYS.indexOf(value) >= 0;\n};\nexport var isArray = Array.isArray;\n/**\n * Simplified version of python's range()\n */\n\nexport var range = function (start, end) {\n  if (end === void 0) {\n    end = start;\n  }\n\n  if (arguments.length === 1) {\n    end = start;\n    start = 0;\n  }\n\n  var rang = [];\n\n  for (var i = start; i < end; i++) rang.push(i);\n\n  return rang;\n};\nexport var clone = function (array) {\n  return [].concat(array);\n};\nexport var repeat = function (value, times) {\n  var i = 0;\n  var array = [];\n\n  if (isArray(value)) {\n    for (; i < times; i++) array[i] = [].concat(value);\n  } else {\n    for (; i < times; i++) array[i] = value;\n  }\n\n  return array;\n};\nexport var toArray = function (item) {\n  if (isArray(item)) {\n    return item;\n  }\n\n  return [item];\n};\nexport function padStart(item, targetLength, padString) {\n  if (padString === void 0) {\n    padString = ' ';\n  }\n\n  var str = String(item);\n  targetLength = targetLength >> 0;\n\n  if (str.length > targetLength) {\n    return String(str);\n  }\n\n  targetLength = targetLength - str.length;\n\n  if (targetLength > padString.length) {\n    padString += repeat(padString, targetLength / padString.length);\n  }\n\n  return padString.slice(0, targetLength) + String(str);\n}\n/**\n * Python like split\n */\n\nexport var split = function (str, sep, num) {\n  var splits = str.split(sep);\n  return num ? splits.slice(0, num).concat([splits.slice(num).join(sep)]) : splits;\n};\n/**\n * closure/goog/math/math.js:modulo\n * Copyright 2006 The Closure Library Authors.\n * The % operator in JavaScript returns the remainder of a / b, but differs from\n * some other languages in that the result will have the same sign as the\n * dividend. For example, -1 % 8 == -1, whereas in some other languages\n * (such as Python) the result would be 7. This function emulates the more\n * correct modulo behavior, which is useful for certain applications such as\n * calculating an offset index in a circular list.\n *\n * @param {number} a The dividend.\n * @param {number} b The divisor.\n * @return {number} a % b where the result is between 0 and b (either 0 <= x < b\n *     or b < x <= 0, depending on the sign of b).\n */\n\nexport var pymod = function (a, b) {\n  var r = a % b; // If r and b differ in sign, add b to wrap the result to the correct sign.\n\n  return r * b < 0 ? r + b : r;\n};\n/**\n * @see: <http://docs.python.org/library/functions.html#divmod>\n */\n\nexport var divmod = function (a, b) {\n  return {\n    div: Math.floor(a / b),\n    mod: pymod(a, b)\n  };\n};\nexport var empty = function (obj) {\n  return !isPresent(obj) || obj.length === 0;\n};\n/**\n * Python-like boolean\n * @return {Boolean} value of an object/primitive, taking into account\n * the fact that in Python an empty list's/tuple's\n * boolean value is False, whereas in JS it's true\n */\n\nexport var notEmpty = function (obj) {\n  return !empty(obj);\n};\n/**\n * Return true if a value is in an array\n */\n\nexport var includes = function (arr, val) {\n  return notEmpty(arr) && arr.indexOf(val) !== -1;\n};","map":{"version":3,"sources":["../../../src/helpers.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["// =============================================================================\n// Helper functions\n// =============================================================================\nimport { ALL_WEEKDAYS } from './weekday';\nexport var isPresent = function (value) {\n    return value !== null && value !== undefined;\n};\nexport var isNumber = function (value) {\n    return typeof value === 'number';\n};\nexport var isWeekdayStr = function (value) {\n    return ALL_WEEKDAYS.indexOf(value) >= 0;\n};\nexport var isArray = Array.isArray;\n/**\n * Simplified version of python's range()\n */\nexport var range = function (start, end) {\n    if (end === void 0) { end = start; }\n    if (arguments.length === 1) {\n        end = start;\n        start = 0;\n    }\n    var rang = [];\n    for (var i = start; i < end; i++)\n        rang.push(i);\n    return rang;\n};\nexport var clone = function (array) {\n    return [].concat(array);\n};\nexport var repeat = function (value, times) {\n    var i = 0;\n    var array = [];\n    if (isArray(value)) {\n        for (; i < times; i++)\n            array[i] = [].concat(value);\n    }\n    else {\n        for (; i < times; i++)\n            array[i] = value;\n    }\n    return array;\n};\nexport var toArray = function (item) {\n    if (isArray(item)) {\n        return item;\n    }\n    return [item];\n};\nexport function padStart(item, targetLength, padString) {\n    if (padString === void 0) { padString = ' '; }\n    var str = String(item);\n    targetLength = targetLength >> 0;\n    if (str.length > targetLength) {\n        return String(str);\n    }\n    targetLength = targetLength - str.length;\n    if (targetLength > padString.length) {\n        padString += repeat(padString, targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + String(str);\n}\n/**\n * Python like split\n */\nexport var split = function (str, sep, num) {\n    var splits = str.split(sep);\n    return num\n        ? splits.slice(0, num).concat([splits.slice(num).join(sep)])\n        : splits;\n};\n/**\n * closure/goog/math/math.js:modulo\n * Copyright 2006 The Closure Library Authors.\n * The % operator in JavaScript returns the remainder of a / b, but differs from\n * some other languages in that the result will have the same sign as the\n * dividend. For example, -1 % 8 == -1, whereas in some other languages\n * (such as Python) the result would be 7. This function emulates the more\n * correct modulo behavior, which is useful for certain applications such as\n * calculating an offset index in a circular list.\n *\n * @param {number} a The dividend.\n * @param {number} b The divisor.\n * @return {number} a % b where the result is between 0 and b (either 0 <= x < b\n *     or b < x <= 0, depending on the sign of b).\n */\nexport var pymod = function (a, b) {\n    var r = a % b;\n    // If r and b differ in sign, add b to wrap the result to the correct sign.\n    return r * b < 0 ? r + b : r;\n};\n/**\n * @see: <http://docs.python.org/library/functions.html#divmod>\n */\nexport var divmod = function (a, b) {\n    return { div: Math.floor(a / b), mod: pymod(a, b) };\n};\nexport var empty = function (obj) {\n    return !isPresent(obj) || obj.length === 0;\n};\n/**\n * Python-like boolean\n * @return {Boolean} value of an object/primitive, taking into account\n * the fact that in Python an empty list's/tuple's\n * boolean value is False, whereas in JS it's true\n */\nexport var notEmpty = function (obj) {\n    return !empty(obj);\n};\n/**\n * Return true if a value is in an array\n */\nexport var includes = function (arr, val) {\n    return notEmpty(arr) && arr.indexOf(val) !== -1;\n};\n//# sourceMappingURL=helpers.js.map"]},"metadata":{},"sourceType":"module"}