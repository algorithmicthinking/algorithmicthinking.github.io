{"ast":null,"code":"import { __assign } from \"tslib\";\nimport dateutil from '../dateutil';\nimport { empty, repeat, pymod, includes } from '../helpers';\nimport { M365MASK, MDAY365MASK, NMDAY365MASK, WDAYMASK, M365RANGE, M366MASK, MDAY366MASK, NMDAY366MASK, M366RANGE } from '../masks';\nexport function rebuildYear(year, options) {\n  var firstyday = new Date(Date.UTC(year, 0, 1));\n  var yearlen = dateutil.isLeapYear(year) ? 366 : 365;\n  var nextyearlen = dateutil.isLeapYear(year + 1) ? 366 : 365;\n  var yearordinal = dateutil.toOrdinal(firstyday);\n  var yearweekday = dateutil.getWeekday(firstyday);\n\n  var result = __assign(__assign({\n    yearlen: yearlen,\n    nextyearlen: nextyearlen,\n    yearordinal: yearordinal,\n    yearweekday: yearweekday\n  }, baseYearMasks(year)), {\n    wnomask: null\n  });\n\n  if (empty(options.byweekno)) {\n    return result;\n  }\n\n  result.wnomask = repeat(0, yearlen + 7);\n  var firstwkst;\n  var wyearlen;\n  var no1wkst = firstwkst = pymod(7 - yearweekday + options.wkst, 7);\n\n  if (no1wkst >= 4) {\n    no1wkst = 0; // Number of days in the year, plus the days we got\n    // from last year.\n\n    wyearlen = result.yearlen + pymod(yearweekday - options.wkst, 7);\n  } else {\n    // Number of days in the year, minus the days we\n    // left in last year.\n    wyearlen = yearlen - no1wkst;\n  }\n\n  var div = Math.floor(wyearlen / 7);\n  var mod = pymod(wyearlen, 7);\n  var numweeks = Math.floor(div + mod / 4);\n\n  for (var j = 0; j < options.byweekno.length; j++) {\n    var n = options.byweekno[j];\n\n    if (n < 0) {\n      n += numweeks + 1;\n    }\n\n    if (!(n > 0 && n <= numweeks)) {\n      continue;\n    }\n\n    var i = void 0;\n\n    if (n > 1) {\n      i = no1wkst + (n - 1) * 7;\n\n      if (no1wkst !== firstwkst) {\n        i -= 7 - firstwkst;\n      }\n    } else {\n      i = no1wkst;\n    }\n\n    for (var k = 0; k < 7; k++) {\n      result.wnomask[i] = 1;\n      i++;\n      if (result.wdaymask[i] === options.wkst) break;\n    }\n  }\n\n  if (includes(options.byweekno, 1)) {\n    // Check week number 1 of next year as well\n    // orig-TODO : Check -numweeks for next year.\n    var i = no1wkst + numweeks * 7;\n    if (no1wkst !== firstwkst) i -= 7 - firstwkst;\n\n    if (i < yearlen) {\n      // If week starts in next year, we\n      // don't care about it.\n      for (var j = 0; j < 7; j++) {\n        result.wnomask[i] = 1;\n        i += 1;\n        if (result.wdaymask[i] === options.wkst) break;\n      }\n    }\n  }\n\n  if (no1wkst) {\n    // Check last week number of last year as\n    // well. If no1wkst is 0, either the year\n    // started on week start, or week number 1\n    // got days from last year, so there are no\n    // days from last year's last week number in\n    // this year.\n    var lnumweeks = void 0;\n\n    if (!includes(options.byweekno, -1)) {\n      var lyearweekday = dateutil.getWeekday(new Date(Date.UTC(year - 1, 0, 1)));\n      var lno1wkst = pymod(7 - lyearweekday.valueOf() + options.wkst, 7);\n      var lyearlen = dateutil.isLeapYear(year - 1) ? 366 : 365;\n      var weekst = void 0;\n\n      if (lno1wkst >= 4) {\n        lno1wkst = 0;\n        weekst = lyearlen + pymod(lyearweekday - options.wkst, 7);\n      } else {\n        weekst = yearlen - no1wkst;\n      }\n\n      lnumweeks = Math.floor(52 + pymod(weekst, 7) / 4);\n    } else {\n      lnumweeks = -1;\n    }\n\n    if (includes(options.byweekno, lnumweeks)) {\n      for (var i = 0; i < no1wkst; i++) result.wnomask[i] = 1;\n    }\n  }\n\n  return result;\n}\n\nfunction baseYearMasks(year) {\n  var yearlen = dateutil.isLeapYear(year) ? 366 : 365;\n  var firstyday = new Date(Date.UTC(year, 0, 1));\n  var wday = dateutil.getWeekday(firstyday);\n\n  if (yearlen === 365) {\n    return {\n      mmask: M365MASK,\n      mdaymask: MDAY365MASK,\n      nmdaymask: NMDAY365MASK,\n      wdaymask: WDAYMASK.slice(wday),\n      mrange: M365RANGE\n    };\n  }\n\n  return {\n    mmask: M366MASK,\n    mdaymask: MDAY366MASK,\n    nmdaymask: NMDAY366MASK,\n    wdaymask: WDAYMASK.slice(wday),\n    mrange: M366RANGE\n  };\n}","map":{"version":3,"sources":["../../../../src/iterinfo/yearinfo.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport dateutil from '../dateutil';\nimport { empty, repeat, pymod, includes } from '../helpers';\nimport { M365MASK, MDAY365MASK, NMDAY365MASK, WDAYMASK, M365RANGE, M366MASK, MDAY366MASK, NMDAY366MASK, M366RANGE } from '../masks';\nexport function rebuildYear(year, options) {\n    var firstyday = new Date(Date.UTC(year, 0, 1));\n    var yearlen = dateutil.isLeapYear(year) ? 366 : 365;\n    var nextyearlen = dateutil.isLeapYear(year + 1) ? 366 : 365;\n    var yearordinal = dateutil.toOrdinal(firstyday);\n    var yearweekday = dateutil.getWeekday(firstyday);\n    var result = __assign(__assign({ yearlen: yearlen,\n        nextyearlen: nextyearlen,\n        yearordinal: yearordinal,\n        yearweekday: yearweekday }, baseYearMasks(year)), { wnomask: null });\n    if (empty(options.byweekno)) {\n        return result;\n    }\n    result.wnomask = repeat(0, yearlen + 7);\n    var firstwkst;\n    var wyearlen;\n    var no1wkst = firstwkst = pymod(7 - yearweekday + options.wkst, 7);\n    if (no1wkst >= 4) {\n        no1wkst = 0;\n        // Number of days in the year, plus the days we got\n        // from last year.\n        wyearlen =\n            result.yearlen + pymod(yearweekday - options.wkst, 7);\n    }\n    else {\n        // Number of days in the year, minus the days we\n        // left in last year.\n        wyearlen = yearlen - no1wkst;\n    }\n    var div = Math.floor(wyearlen / 7);\n    var mod = pymod(wyearlen, 7);\n    var numweeks = Math.floor(div + mod / 4);\n    for (var j = 0; j < options.byweekno.length; j++) {\n        var n = options.byweekno[j];\n        if (n < 0) {\n            n += numweeks + 1;\n        }\n        if (!(n > 0 && n <= numweeks)) {\n            continue;\n        }\n        var i = void 0;\n        if (n > 1) {\n            i = no1wkst + (n - 1) * 7;\n            if (no1wkst !== firstwkst) {\n                i -= 7 - firstwkst;\n            }\n        }\n        else {\n            i = no1wkst;\n        }\n        for (var k = 0; k < 7; k++) {\n            result.wnomask[i] = 1;\n            i++;\n            if (result.wdaymask[i] === options.wkst)\n                break;\n        }\n    }\n    if (includes(options.byweekno, 1)) {\n        // Check week number 1 of next year as well\n        // orig-TODO : Check -numweeks for next year.\n        var i = no1wkst + numweeks * 7;\n        if (no1wkst !== firstwkst)\n            i -= 7 - firstwkst;\n        if (i < yearlen) {\n            // If week starts in next year, we\n            // don't care about it.\n            for (var j = 0; j < 7; j++) {\n                result.wnomask[i] = 1;\n                i += 1;\n                if (result.wdaymask[i] === options.wkst)\n                    break;\n            }\n        }\n    }\n    if (no1wkst) {\n        // Check last week number of last year as\n        // well. If no1wkst is 0, either the year\n        // started on week start, or week number 1\n        // got days from last year, so there are no\n        // days from last year's last week number in\n        // this year.\n        var lnumweeks = void 0;\n        if (!includes(options.byweekno, -1)) {\n            var lyearweekday = dateutil.getWeekday(new Date(Date.UTC(year - 1, 0, 1)));\n            var lno1wkst = pymod(7 - lyearweekday.valueOf() + options.wkst, 7);\n            var lyearlen = dateutil.isLeapYear(year - 1) ? 366 : 365;\n            var weekst = void 0;\n            if (lno1wkst >= 4) {\n                lno1wkst = 0;\n                weekst = lyearlen + pymod(lyearweekday - options.wkst, 7);\n            }\n            else {\n                weekst = yearlen - no1wkst;\n            }\n            lnumweeks = Math.floor(52 + pymod(weekst, 7) / 4);\n        }\n        else {\n            lnumweeks = -1;\n        }\n        if (includes(options.byweekno, lnumweeks)) {\n            for (var i = 0; i < no1wkst; i++)\n                result.wnomask[i] = 1;\n        }\n    }\n    return result;\n}\nfunction baseYearMasks(year) {\n    var yearlen = dateutil.isLeapYear(year) ? 366 : 365;\n    var firstyday = new Date(Date.UTC(year, 0, 1));\n    var wday = dateutil.getWeekday(firstyday);\n    if (yearlen === 365) {\n        return {\n            mmask: M365MASK,\n            mdaymask: MDAY365MASK,\n            nmdaymask: NMDAY365MASK,\n            wdaymask: WDAYMASK.slice(wday),\n            mrange: M365RANGE\n        };\n    }\n    return {\n        mmask: M366MASK,\n        mdaymask: MDAY366MASK,\n        nmdaymask: NMDAY366MASK,\n        wdaymask: WDAYMASK.slice(wday),\n        mrange: M366RANGE\n    };\n}\n//# sourceMappingURL=yearinfo.js.map"]},"metadata":{},"sourceType":"module"}